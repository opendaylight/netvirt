{
  "comments": [
    {
      "key": {
        "uuid": "6c190b69_b10c96ac",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-14T11:14:00Z",
      "side": 1,
      "message": "better LOG.error instead of just LOG.warn?  (But even better would be to just let it propagate...)",
      "revId": "d4f606b2e88ab18e85235706d2bbe3a1a26e14b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5fa3232_65f714f1",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-11-22T09:03:05Z",
      "side": 1,
      "message": "Michael as you can see, configureFeatures() is called during the blueprint initialization, and this method gets invoked on all 3 nodes in a cluster which can result in OptimisticLockFailedException, and I think that is the reason why this is a LOG.warn. If we propagate this, there will be bundle bringup issues. you can see that existing line 251 has a similar implementation. How do we go about it?",
      "parentUuid": "6c190b69_b10c96ac",
      "revId": "d4f606b2e88ab18e85235706d2bbe3a1a26e14b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ff8067f_be14b033",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-29T12:05:24Z",
      "side": 1,
      "message": "Then how about at least being more fine grained  and just catch (OptimisticLockFailedException e) instead of TransactionCommitFailedException?  And if you \"expect\" this OptimisticLockFailedException, then I would probably only LOG.debug it, not LOG.warn it (because what are you \"warning\" an operator about - there is nothing \"to do\", in this case?).  And I would let the TransactionCommitFailedException propagate, because if that and not a OptimisticLockFailedException ever happens, that would be a \"real\" problem, which should fail the blueprint initialization.",
      "parentUuid": "b5fa3232_65f714f1",
      "revId": "d4f606b2e88ab18e85235706d2bbe3a1a26e14b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}