{
  "comments": [
    {
      "key": {
        "uuid": "1a622d24_6b55334f",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5492
      },
      "writtenOn": "2017-01-11T12:58:15Z",
      "side": 1,
      "message": "For IPv6 East West we donot support VLAN/FLAT networks.. We only support VXLAN right?",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a88ba866",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "Thanks @Vivek for reviewing the patch.\n\nI\u0027m afraid no. We do support VLAN/FLAT (along with VxLAN) tenant networks for IPv6 east-west.",
      "parentUuid": "1a622d24_6b55334f",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_818682d9",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 6773
      },
      "writtenOn": "2017-01-12T16:28:47Z",
      "side": 1,
      "message": "actually DNAT (floating IP) is also source NAT (going out) only with a dedicated IP (hence the \"D\" in DNAT). The correct term would be SNAT where the \"S\" means \"Shared\" - not source :)",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 18
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_ed549200",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 5492
      },
      "writtenOn": "2017-01-11T12:58:15Z",
      "side": 1,
      "message": "in east-west routing, what Source MAC address is carried on distributed packets over internal vxlan tunnels?",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_68dcf073",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "The behavior is same as IPv4 (i.e., VM MAC is carried as source MAC).",
      "parentUuid": "1a622d24_ed549200",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_01727210",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 6773
      },
      "writtenOn": "2017-01-12T16:28:47Z",
      "side": 1,
      "message": "This is correct but is really an anomaly of the implementation. In the reference Neutron implementation the SMAC should have been a MAC per DPN (compute host) assigned to the DVR router port.",
      "parentUuid": "1a622d24_68dcf073",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_012a728f",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 6773
      },
      "writtenOn": "2017-01-12T16:28:47Z",
      "side": 1,
      "message": "While there is no need for a NAT, the network model should still be the same as that of a \"router\". In other words, an IPv6 VM MAC should be replaced by a \"router\" port MAC and no NDP request should be expected for the VM but should be expected for this router port. The problem with DVR is that there is no real one port. Hence, the question is how to handle the NDP request. Since this request should not be expected to reference the VM to be reached (in fact it may be performed once for communications with multiple VMs on different computer hosts), it seems that the only viable solution would be to respond to such request with a single MAC, similar to the SNAT solution with the unfortunate side effect of having all the N-S traffic going through a single compute as a gateway just like with SNAT traffic.\nFor better performance, Floating IPv6 IPs could be used (with DNAT) could be used.\nI do not see a solution where the model effectively moves the Neutron network to the ext net (we cannot expect NDP queries for the VM IPv6 addresses even if they are globally routable).\nIn addition, note that an IPv6 host may also use link local addresses which should not be forwarded outside the L2 domain and this would be yet another case to differentiate from globally routable IPv6 addresses.",
      "range": {
        "startLine": 47,
        "startChar": 28,
        "endLine": 48,
        "endChar": 29
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_493e4cdb",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-13T16:03:41Z",
      "side": 1,
      "message": "Reg: \u003e\u003eWhile there is no need for a NAT, the network model should still be the same as that of a \"router\". In other words, an IPv6 VM MAC should be replaced by a \"router\" port MAC and no NDP request should be expected for the VM but should be expected for this router port. \n\n[Sridhar] Ideally, this would be the behavior with a centralized router solution. But the objective of this SPEC is to support a distributed one where we manually configure the external/physical IPv6 gateway with an \"on-link route to tenant GUA prefix\". \n\nThis was one of the Blueprints proposed in OpenStack Neutron (but was not implemented) - https://review.openstack.org/#/c/136878/8/specs/kilo/ipv6-router-and-dvr.rst\n\nIn the absence of routing protocols (like BGP), to realize the north-south IPv6 use-case we have to anyway configure a downstream route on the physical IPv6 gateway. \nThis SPEC expects that we configure an \"onlink route\" in the physical IPv6 gateway. Do you think this would not be feasible with all the Physical IPv6 Gateways?\n\nNote: We have a parallel spec that will address the BGPVPN IPv6 north-south use-case - https://git.opendaylight.org/gerrit/#/c/50359/\n\n\n\nReg: \u003e\u003e The problem with DVR is that there is no real one port. Hence, the question is how to handle the NDP request. Since this request should not be expected to reference the VM to be reached (in fact it may be performed once for communications with multiple VMs on different computer hosts), it seems that the only viable solution would be to respond to such request with a single MAC, similar to the SNAT solution with the unfortunate side effect of having all the N-S traffic going through a single compute as a gateway just like with SNAT traffic.\n\n[Sridhar] Thats true. In a centralized IPv6 router implementation, we\u0027ll be able to use the router-gateway-mac just like SNAT.\n\n\nReg: \u003e\u003e For better performance, Floating IPv6 IPs could be used (with DNAT) could be used.\n[Sridhar] OpenStack Neutron API does NOT support IPv6 floating-ips.\n\n\nReg: \u003e\u003e In addition, note that an IPv6 host may also use link local addresses which should not be forwarded outside the L2 domain and this would be yet another case to differentiate from globally routable IPv6 addresses.\n\n[Sridhar] This would be taken care. Currently, we support IPv6 east-west routing, and Link Local addresses are NOT forwarded outside the L2 domain.",
      "parentUuid": "1a622d24_012a728f",
      "range": {
        "startLine": 47,
        "startChar": 28,
        "endLine": 48,
        "endChar": 29
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_ad8bba66",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 5492
      },
      "writtenOn": "2017-01-11T12:58:15Z",
      "side": 1,
      "message": "You may want to allocate HOST_MAC in ODL from the range configured inside dvr_mac_address of neutron.conf",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_2813180e",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "yes @Vivek, I was also thinking of the same. \n\nOne issue is - how do we get this info to ODL, since neutron.conf is not parsed/read by ODL Controller.\nDo you think we should provide some REST API to configure this in ODL (with the default value as what OpenStack neutron uses - i.e., fa:16:3f:00:00:00)?",
      "parentUuid": "1a622d24_ad8bba66",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_260ed28d",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 4269
      },
      "writtenOn": "2017-01-03T15:08:24Z",
      "side": 1,
      "message": "Do we require a host mac for this scenario?",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_07ef2aea",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "IMO yes. AFAIK, this is how IPv4 east-west routing is supported in OpenStack Neutron DVR. @Vivek will be able to confirm this.",
      "parentUuid": "1a622d24_260ed28d",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_cdb71639",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5492
      },
      "writtenOn": "2017-01-11T12:58:15Z",
      "side": 1,
      "message": "This is self indicative that IPv6 is not suppored on VLAN Provider networks for internal switchign/routing as that would have garbled the MAC Table of physical switches connecting the Cloud Data Network Fabric.",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a793d659",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "Are you referring to VLAN provider or VLAN tenant networks. Sorry, I\u0027m not sure if I got your point. Can you please elaborate? \n\nWe do support IPv6 VLAN tenant networks for east-west in the same manner as IPv4.",
      "parentUuid": "1a622d24_cdb71639",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_e18ad6bd",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 6773
      },
      "writtenOn": "2017-01-12T16:28:47Z",
      "side": 1,
      "message": "The East-West IPv6 can be solved exactly like in IPv4 (with or without HOST_MAC). There is no real issue with reference to VM\u0027s as their ARP\u0027s for the Neutron router port on the source network would always be responded to within the compute (either by the controller or by the OVS responder). This is different from the case of the ext net.\nHowever, a similar issue exists for non-VM instances on a VLAN provider network (e.g. appliance / PNF) which would like to communicate at L3 with a VM on another Neutron network. We refer to this as the L3 PNF issue. One solution would be to mandate HWVTEP connectivity for such an appliance / PNF.",
      "parentUuid": "1a622d24_a793d659",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_640c0f3c",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-13T16:03:41Z",
      "side": 1,
      "message": "Reg: \u003e\u003eThe East-West IPv6 can be solved exactly like in IPv4 (with or without HOST_MAC). There is no real issue with reference to VM\u0027s as their ARP\u0027s for the Neutron router port on the source network would always be responded to within the compute (either by the controller or by the OVS responder). This is different from the case of the ext net.\n\n[Sridhar] I agree. The issue I wanted to mention is that we are not updating the source MAC in the datapath even when the traffic hits the second network.\nIdeally, if we had a router MAC per DPN, we could have avoided this issue. As you rightly mentioned, this is an anomaly with OpenStack Neutron implementation. OpenStack uses HOST_MAC/compute-node for the east-west.",
      "parentUuid": "1a622d24_e18ad6bd",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_ad461a4d",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5492
      },
      "writtenOn": "2017-01-11T12:58:15Z",
      "side": 1,
      "message": "This entire para above must be placed first in the overview..\n\nThis Spec looks llke a suspense thriller novel \u003d)\n\nJust to re-stress[4] does not handle proper sourcemac address in datapath.  It only makes sure that when VM receives a frame, the frame contains a valid source mac address inside it.",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_87b21a04",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "\"suspense thriller....\" \u003e hahaha....LOL!!!\n\nAgree with you, [4] only updates the source MAC just before the packet is delivered to the VM. I\u0027ll try to re-phrase this sentence to remove any confusion.",
      "parentUuid": "1a622d24_ad461a4d",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_ad2a9a8d",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 5492
      },
      "writtenOn": "2017-01-11T12:58:15Z",
      "side": 1,
      "message": "Host MAC addresses are used only to send out packets onto the external network from the hypervisors themselves.   \n\nWhen an ARP for hte router-gateway-ip comes from external entity,you will continue to responde with the router-gateway-mac-address only (i.e.,no role of HOST MAC here right)?",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a77ab621",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "@Vivek, for your first sentence -\u003e In OpenStack DVR implementation are HOST MACs not used for East-West routing?\n\nFor the second point: If there is a Neighbor Solicitation from the external IPv6 gateway to the \"VM IPv6 GUA\", ODL controller would actually respond with HOST_MAC and not router-gateway-mac. Do you see any issue with this?",
      "parentUuid": "1a622d24_ad2a9a8d",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_061116ac",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 4269
      },
      "writtenOn": "2017-01-03T15:08:24Z",
      "side": 1,
      "message": "Is there any logic planned to make this mac unique from the openstack generated macs? If so can we mention it here?",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_f7dbd84c",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-01-06T07:18:21Z",
      "side": 1,
      "message": "each ovs port also has a port mac, that could be leveraged for this. when the controller sends pkt_out to the external n/w it could use the port mac of the vlan transport port from which the pkt is sent out. this port mac is stored in the interface manager, and is received by the controller as part of the of port up notification. i think the switch generates port macs based on its own NIC, but i am not 100% sure how it works on the switch itself",
      "range": {
        "startLine": 108,
        "startChar": 69,
        "endLine": 108,
        "endChar": 77
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a7c8f655",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "This was one of my initial ideas, but @Vivek had some concerns and suggested that it would be a good idea if we generate HOST_MACs in ODL (similar to OpenStack Neutron).",
      "parentUuid": "1a622d24_f7dbd84c",
      "range": {
        "startLine": 108,
        "startChar": 69,
        "endLine": 108,
        "endChar": 77
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_679c1e5e",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "Yes, we would be using a separate prefix (dvr_mac_address) similar to how OpenStack Neutron uses.",
      "parentUuid": "1a622d24_061116ac",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_bc112154",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 6773
      },
      "writtenOn": "2017-01-12T16:28:47Z",
      "side": 1,
      "message": "I believe we should really implement the same kind of RPC that the L3 agent performs to get the HOST_MAC but in ODL. ODL internal allocation may suffer from inconsistencies with the Neutron implementation which I am concerned about too. Also, we may need a MAC per Neutron router port per host and not just per host.",
      "parentUuid": "1a622d24_a7c8f655",
      "range": {
        "startLine": 108,
        "startChar": 69,
        "endLine": 108,
        "endChar": 77
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a4110754",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-13T16:03:41Z",
      "side": 1,
      "message": "[Sridhar] IMHO, introducing a reverse-rpc-channel to Neutron Server would be an overkill for this requirement.\nNeutron uses two separate MACs - one (generated via base_mac prefix) for the VMs and the other (dvr_mac_address prefix) for HOST_MACs.\nBoth are different prefixes, so they do not overlap. If we use the dvr_mac_prefix in ODL, IMHO we should be good.",
      "parentUuid": "1a622d24_bc112154",
      "range": {
        "startLine": 108,
        "startChar": 69,
        "endLine": 108,
        "endChar": 77
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_26b1a847",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5802
      },
      "writtenOn": "2017-01-05T14:26:08Z",
      "side": 1,
      "message": "I think HOST_MAC needs to be allocated per compute/control node *per router gw* otherwise it would be impossible to classify the reverse traffic if the external network has more than one subnet defined. It might not make a difference in the current pipeline but it should after the hairpinning changes detailed in https://git.opendaylight.org/gerrit/#/c/49524",
      "range": {
        "startLine": 108,
        "startChar": 58,
        "endLine": 109,
        "endChar": 16
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_57ec4cf3",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-01-06T07:18:21Z",
      "side": 1,
      "message": "can we not use the vlan itself to scope the domain for the reverse traffic? macs are expected to be unique per vlan anyways.\nalso, what mac is used today by snat box for ipv4 snat usecase over vlan provider n/ws? does the snat switch use a fabricated mac?",
      "parentUuid": "1a622d24_26b1a847",
      "range": {
        "startLine": 108,
        "startChar": 58,
        "endLine": 109,
        "endChar": 16
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_e7be6ead",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "+1 for the first statement from Daya.\n\n@Daya, currently SNAT traffic uses VM MAC as source MAC instead of Router Gateway MAC. The following patch addresses this issue - https://git.opendaylight.org/gerrit/#/c/48430/",
      "parentUuid": "1a622d24_57ec4cf3",
      "range": {
        "startLine": 108,
        "startChar": 58,
        "endLine": 109,
        "endChar": 16
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_3c2d1196",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 6773
      },
      "writtenOn": "2017-01-12T16:28:47Z",
      "side": 1,
      "message": "-1 I do not agree. The model should allow for a MAC per Neutron router port per host or the network model would be broken when no VLANs are used (e.g. flat ext net with multiple subnets).",
      "parentUuid": "1a622d24_e7be6ead",
      "range": {
        "startLine": 108,
        "startChar": 58,
        "endLine": 109,
        "endChar": 16
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_041b9b73",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-13T16:03:41Z",
      "side": 1,
      "message": "Thanks for the suggestion, I\u0027ll think through. \nAny idea how OpenStack is supporting the use-cases with a single HOST_MAC per compute node?",
      "parentUuid": "1a622d24_3c2d1196",
      "range": {
        "startLine": 108,
        "startChar": 58,
        "endLine": 109,
        "endChar": 16
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_17e65415",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-01-06T07:18:21Z",
      "side": 1,
      "message": "if the i/f manager based port mac works, this would not be needed, right?",
      "range": {
        "startLine": 112,
        "startChar": 52,
        "endLine": 112,
        "endChar": 53
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_97c1c456",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-01-06T07:18:21Z",
      "side": 1,
      "message": "i guess you indicate, we also need to support NDs in the same n/w from external? is this allowed by neutron for ipv6, ie external entity on the same vlan as VMs, and sending ND for the VM IP? can we not use the VM mac itself for this case? if not, we need to map out the workflow for the arp responder in this case, because the mac sent would have to be different based on the sender it is received from. also, today for internal NDs, the VMs respond on their own, we do not leverage the arp responder, to my knowledge, so both aspects need to be covered, whether and how to use the arp responder, and how to differentiate between the macs if it is still needed.",
      "range": {
        "startLine": 119,
        "startChar": 25,
        "endLine": 119,
        "endChar": 26
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_07560a2a",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "\" ie external entity on the same vlan as VMs, and sending ND for the VM IP? can we not use the VM mac itself for this case?\" -\u003e This is a provider network use-case where VMs are directly spawned on the external/provider network (without any Neutron Virtual Router). In such use-cases, the VMs are on the same network, so they communicate with their MAC as SRC MAC and respond directly to the external servers/gateway.",
      "parentUuid": "1a622d24_97c1c456",
      "range": {
        "startLine": 119,
        "startChar": 25,
        "endLine": 119,
        "endChar": 26
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_e4ec9fbd",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 5661
      },
      "writtenOn": "2017-01-13T19:37:04Z",
      "side": 1,
      "message": "I think Daya\u0027s question is, how do we differentiate the Neighbor Solicitation requests coming for a IPv6 VM from an external router or another entity attached to the same IPv6 network via L2GW or VLAN provide network? If the NS is from external router, it needs to be punted to controller and responded with HOST_MAC. Else it needs to broadcasted in the ELAN instance and responded with VM MAC. So we need to program the flows accordingly (I think there is a concept of internal tunnel and external tunnel in the pipeline. May be we should explore if that can used for this differentiation)",
      "parentUuid": "1a622d24_07560a2a",
      "range": {
        "startLine": 119,
        "startChar": 25,
        "endLine": 119,
        "endChar": 26
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_c629d438",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 6966
      },
      "writtenOn": "2017-01-05T14:33:07Z",
      "side": 1,
      "message": "Do you have some references about having a Controller that supports NDP? NDP has many more complexities than ARP with many options, I am concerned that we could loose some options of NDP. A reference of best practice about it would help.",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_870a1a77",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "Agree that NDP is not as simple as ARP.\n\nI\u0027m not aware of any reference. We can refer to the RFCs [*] that explain the behavior of Router/Host for Neighbor Discovery protocol. Recently we optimized the frequency of NS in the tenant network via the following patch - https://git.opendaylight.org/gerrit/#/c/50089\n\nIf you have/find any best practices, please let us know. OTOH since we are not supporting IPv6 MLD, we have a subset of IPv6 use-cases to be handled in our Virtual IPv6 router.\n\n[*] https://tools.ietf.org/html/rfc4861#page-40",
      "parentUuid": "1a622d24_c629d438",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_4d11465c",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 5492
      },
      "writtenOn": "2017-01-11T12:58:15Z",
      "side": 1,
      "message": "ipv6 today is considered as a separate service, so I am wondering if it would confuse when you re-use IPV4 NATing tables (including FIP tables) for this IPv6 use-cases.",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a76bd61c",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "Even though IPv6 is a separate service, the intention from day-one was to use it only for IPv6 control path and not for data path. Pipeline programming (and data path) would be similar to IPv4.",
      "parentUuid": "1a622d24_4d11465c",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_861c06c3",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 4269
      },
      "writtenOn": "2017-01-03T15:08:24Z",
      "side": 1,
      "message": "+1, it will make it symmetric",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a63938a6",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 5802
      },
      "writtenOn": "2017-01-05T14:26:08Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "1a622d24_861c06c3",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_3728b0e1",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-01-06T07:18:21Z",
      "side": 1,
      "message": "is the lookup key same in both cases, ie v4 or v6 ip addr? should we worry about any perf considerations, if the keys are different?",
      "range": {
        "startLine": 134,
        "startChar": 43,
        "endLine": 134,
        "endChar": 44
      },
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a0912a9b",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 5802
      },
      "writtenOn": "2017-01-05T14:26:08Z",
      "side": 1,
      "message": "as we may want to utilize this model for east/west cases it seems more appropriate to place it in a more generic module than odl-nat. Maybe odl-l3vpn?",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a62e5841",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 6966
      },
      "writtenOn": "2017-01-05T14:33:07Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "1a622d24_a0912a9b",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_87cfba28",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "Sure, thanks.",
      "parentUuid": "1a622d24_a62e5841",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_466784b7",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5802
      },
      "writtenOn": "2017-01-05T14:26:08Z",
      "side": 1,
      "message": "Did you consider incorporating this into one of the existing models like ext-routers?",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_808cee80",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5802
      },
      "writtenOn": "2017-01-05T14:26:08Z",
      "side": 1,
      "message": "I believe you would like to create a higher level hierarchy here.\nIf you have multiple routers each with its own ext-gw-info you would need to keep a set of HOST_MACs per router.",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_061f4c09",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 6966
      },
      "writtenOn": "2017-01-05T14:33:07Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "1a622d24_808cee80",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_47be4266",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "Since the HOST_MACs are per compute node and not router specific, IMO ext-routers may not be the right one.",
      "parentUuid": "1a622d24_808cee80",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_666a8082",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 5802
      },
      "writtenOn": "2017-01-05T14:26:08Z",
      "side": 1,
      "message": "Wouldn\u0027t we want to make this feature configurable? maybe depending on neutron router distributed\u003dtrue config and keep the single router-gw mac if set to false",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_c7b1b290",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "IMHO, we cannot use a single router-gw-mac for a fully distributed IPv6 router. Since we only want to support a distributed router and not a centralized one, the flag \"router distributed\u003dtrue\" would not make any difference for IPv6 use-cases.",
      "parentUuid": "1a622d24_666a8082",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_e6617a3a",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 4269
      },
      "writtenOn": "2017-01-03T15:08:24Z",
      "side": 1,
      "message": "There was a plan to the the external interface mac as the host mac? is this the odl allocated mac?",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_a7ae362c",
        "filename": "docs/specs/ipv6-distributed-router.rst",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 5197
      },
      "writtenOn": "2017-01-11T18:00:41Z",
      "side": 1,
      "message": "Yes @Aswin, this is ODL allocated MAC.",
      "parentUuid": "1a622d24_e6617a3a",
      "revId": "976d7bbd2030e84f67b3b82780adbe501390d954",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}