{
  "comments": [
    {
      "key": {
        "uuid": "ba51214e_309f6754",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronFloatingToFixedIpMappingChangeListener.java",
        "patchSetId": 12
      },
      "lineNbr": 92,
      "author": {
        "id": 3511
      },
      "writtenOn": "2016-06-24T10:21:07Z",
      "side": 1,
      "message": "why this notification doesn\u0027t call addToFloatingIpInfo?\nwhat other flow is triggering the creation of FloatingIpInfo?",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_906d9335",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronFloatingToFixedIpMappingChangeListener.java",
        "patchSetId": 12
      },
      "lineNbr": 92,
      "author": {
        "id": 8584
      },
      "writtenOn": "2019-11-11T18:10:40Z",
      "side": 1,
      "message": "FloatingIP info is populated only upon association with fixedIP, not when we create one. Upon associate, it comes as an update, so that is where the model gets populated.\nThe use case which enables association upon addition of floatingIP will be handled in subsequent reviews.",
      "parentUuid": "ba51214e_309f6754",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_f0316fa3",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 12
      },
      "lineNbr": 524,
      "author": {
        "id": 3511
      },
      "writtenOn": "2016-06-24T08:46:51Z",
      "side": 1,
      "message": "wouldn\u0027t it make sense to add this code in FloatingIpListener since this code is related to floating ip only?",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_d020abf9",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 12
      },
      "lineNbr": 524,
      "author": {
        "id": 3511
      },
      "writtenOn": "2016-06-24T10:21:07Z",
      "side": 1,
      "message": "1) is this bug exist also in Mitaka?\n2) my comment was more like a \"code convention\" question. wouldn\u0027t it be more sense to expect code that related to FloatingIp to be near the code where all handling of FloatingIp is done. i find it confusing to look in several places the creation/deletion of a specific type of element.\n3) general question regarding using locks in this flow. it seems that lock are used only to protect from concurrent writing to mdsal but not from races. for example an add of routerPort that runs in parallel to a delete can end up with a non-expected result\nwhat is protecting the code from such races?",
      "parentUuid": "ba51214e_50ac9ba0",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_d0c8ab76",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 12
      },
      "lineNbr": 524,
      "author": {
        "id": 3276
      },
      "writtenOn": "2016-06-29T07:05:56Z",
      "side": 1,
      "message": "trigger for this is port getting deleted, it won\u0027t show up in FloatingIpListener.",
      "parentUuid": "ba51214e_f0316fa3",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_70a0bf90",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 12
      },
      "lineNbr": 524,
      "author": {
        "id": 5263
      },
      "writtenOn": "2016-07-01T08:37:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba51214e_f0316fa3",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_10618339",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 12
      },
      "lineNbr": 524,
      "author": {
        "id": 8584
      },
      "writtenOn": "2019-11-11T18:10:40Z",
      "side": 1,
      "message": "My upper comment is also for comments on this block in earlier patchsets. But yes, I do see the scope of moving this to FloatingIP class. Even though delete is triggered here, the operation is about floatingIP deletion. Suraj is working on this as we speak.",
      "parentUuid": "ba51214e_50ac9ba0",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_d0770b01",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 12
      },
      "lineNbr": 524,
      "author": {
        "id": 8584
      },
      "writtenOn": "2019-11-11T18:10:40Z",
      "side": 1,
      "message": "1) Haven\u0027t checked on Mitaka, been testing on OS Liberty.\n2) +1, indicated the same in earlier comment.\n3) I believe we lock on the entity, thus preventing any two writes/deletes from coming at once. The operations should come in sequentially in presence of a lock.",
      "parentUuid": "ba51214e_d020abf9",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_50ac9ba0",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 12
      },
      "lineNbr": 524,
      "author": {
        "id": 8584
      },
      "writtenOn": "2019-11-11T18:10:40Z",
      "side": 1,
      "message": "Please bear with my long comment, I\u0027ll summarize the issue here:\n\n1. There\u0027s a bug in OS Liberty where upon deletion of a neutron port, the corresponding dissociation of this neutron port with the associated floating IP is not sent to ODL.\nThis function is actually a workaround (albeit a very costly one!) where with the neutron port, we first retrieve the entire datastore content for the following:\n\ncontainer floating-ip-info {\n        config true;\n        list router-ports {\n            key router-id;\n            leaf router-id { type string; }\n            leaf external-network-id { type yang:uuid; }\n            list ports {\n                key port-name;\n                leaf port-name { type string; }\n                list ip-mapping {\n                    key \"internal-ip\";\n                    uses external-interface-info;\n                }\n            }\n        }\n    }\n\nNote that this has three level of nested lists.\nUpon retrieval, we delete at the highermost level depending on the number of ports, IPs per port present.\n\n2. This performs delete either at the uppermost router-ports level if only one port is present, or at the middle ports-list level if multiple ports are there.\n\n3. Four if-blocks are there to first check for existence of data at the container and then at the list level followed by deletion. Else mostly deals with debug logs to give proper detailed info on the operation performed.",
      "parentUuid": "ba51214e_f0316fa3",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_b0aa576e",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 12
      },
      "lineNbr": 1132,
      "author": {
        "id": 3511
      },
      "writtenOn": "2016-06-24T10:21:07Z",
      "side": 1,
      "message": "missing {}",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_308927ec",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 12
      },
      "lineNbr": 1132,
      "author": {
        "id": 5263
      },
      "writtenOn": "2016-07-01T08:37:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba51214e_b0aa576e",
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_30bac7de",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnUtils.java",
        "patchSetId": 12
      },
      "lineNbr": 489,
      "author": {
        "id": 3276
      },
      "writtenOn": "2016-06-24T09:06:03Z",
      "side": 1,
      "message": "my comment was about moving this check to line 488:\n\nif(npe !\u003d null  \u0026\u0026 npe.getNetworkType() !\u003d null)\n\n@Vinoth: yes, instanceof would make null check redundant, wanted someone to confirm if okay to use instance of in this case.",
      "range": {
        "startLine": 489,
        "startChar": 16,
        "endLine": 489,
        "endChar": 38
      },
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_90a3d39d",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnUtils.java",
        "patchSetId": 12
      },
      "lineNbr": 489,
      "author": {
        "id": 5263
      },
      "writtenOn": "2016-07-01T08:37:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba51214e_30bac7de",
      "range": {
        "startLine": 489,
        "startChar": 16,
        "endLine": 489,
        "endChar": 38
      },
      "revId": "fd41674cae3b8c1213110b27778f01d12e91eb38",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}