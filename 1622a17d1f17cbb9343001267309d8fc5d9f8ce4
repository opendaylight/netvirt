{
  "comments": [
    {
      "key": {
        "uuid": "b258247c_635ff908",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/AbstractSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-07-23T15:17:17Z",
      "side": 1,
      "message": "I am still not so sure whether this will introduce any scale problem. Each listener is going to be an akka actor, and with this approach, for a short period of time during cluster reboot, we are going to have so many listeners registered. I am not saying that this has huge impact, but we do have to test and see what happens",
      "revId": "1622a17d1f17cbb9343001267309d8fc5d9f8ce4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13e62d9e_e76b3050",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/AbstractSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 4540
      },
      "writtenOn": "2018-07-23T15:23:48Z",
      "side": 1,
      "message": "Exactly; but with this approach, we can deal with scale issues in onAddOrUpdate (which has all the info needed). If we see that adding a listener causes issues, we can do\n\n    if (read...) {\n        run the handler immediately\n    } else {\n        add a listener\n    }\n\nwith appropriate error handling.\n\nIn the current code, if a read fails because of a cluster issue, the listener wonâ€™t even be registered!",
      "parentUuid": "b258247c_635ff908",
      "revId": "1622a17d1f17cbb9343001267309d8fc5d9f8ce4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5edd5841_5f88f9e5",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/AbstractSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-07-24T05:50:39Z",
      "side": 1,
      "message": "Yeah, but we don\u0027t know which one is more overhead, registering call back, or reading datastore ;)",
      "parentUuid": "13e62d9e_e76b3050",
      "revId": "1622a17d1f17cbb9343001267309d8fc5d9f8ce4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55d1e43e_93e8f888",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/AbstractSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 4540
      },
      "writtenOn": "2018-07-24T09:25:41Z",
      "side": 1,
      "message": "Agreed; my point is that this approach will allow us to implement whichever solution is better, in a single place (on AddOrUpdate etc.), instead of having to revisit every single call site.",
      "parentUuid": "5edd5841_5f88f9e5",
      "revId": "1622a17d1f17cbb9343001267309d8fc5d9f8ce4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b404d2a_9e887e31",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/AbstractSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-07-24T10:26:07Z",
      "side": 1,
      "message": "Yes, agree! +1 from my side. Even Muthu is suggesting callback will be better than the DS read.",
      "parentUuid": "55d1e43e_93e8f888",
      "revId": "1622a17d1f17cbb9343001267309d8fc5d9f8ce4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}