{
  "comments": [
    {
      "key": {
        "uuid": "da2a55be_00bc6fdb",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 108,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-07-27T14:38:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2a55be_1cdfc50e",
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_e0be7bd3",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 118,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-07-27T14:38:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2a55be_fce111d1",
      "range": {
        "startLine": 117,
        "startChar": 7,
        "endLine": 118,
        "endChar": 71
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_40b667fb",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 120,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-07-27T14:38:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2a55be_5ce93db7",
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_7c8521ac",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 123,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-07-27T13:11:32Z",
      "side": 1,
      "message": "This LOG.info statements were added temporary, this helps to trace VPN interfaces creation, update and deletion.\n\nAll these redundant LOG.info statements will be deleted since we\u0027ll find a bug, which has caused following issues:\n\nhttps://bugs.opendaylight.org/show_bug.cgi?id\u003d8865\nhttps://bugs.opendaylight.org/show_bug.cgi?id\u003d8869",
      "parentUuid": "da2a55be_3cec49c7",
      "range": {
        "startLine": 123,
        "startChar": 16,
        "endLine": 123,
        "endChar": 60
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_20b9b3e9",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 123,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-07-27T14:38:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2a55be_3cec49c7",
      "range": {
        "startLine": 123,
        "startChar": 16,
        "endLine": 123,
        "endChar": 60
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_d92ffaf4",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 298,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-26T16:22:00Z",
      "side": 1,
      "message": "Please fetch the subnetMap and return if its is null, instead of isEmpty().\nOr is there any other reason why there is an isEmpty() check here?",
      "range": {
        "startLine": 293,
        "startChar": 20,
        "endLine": 298,
        "endChar": 17
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_0f0e6034",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 298,
      "author": {
        "id": 6574
      },
      "writtenOn": "2017-07-26T16:53:24Z",
      "side": 1,
      "message": "just to be sure, Kiran,\nare we talking about the subnetmap or the subnetmaplist.\n\nafai understand, i build a list of subnets, and if the list contains at least one subnet, i create the vpn interface.\nthe subnetmaplist is set to new ArrayList \u003c\u003e. The check to see that the list is empty is isEmpty(). Right ?\n\nPlease confirm.",
      "parentUuid": "da2a55be_d92ffaf4",
      "range": {
        "startLine": 293,
        "startChar": 20,
        "endLine": 298,
        "endChar": 17
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_2f3d24df",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 298,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-27T11:00:00Z",
      "side": 1,
      "message": "If sn here is null, then subnetMapList will be a non-empty list with a null element. So, the subnetMapList.isEmpty() will be false. So, the .isEmpty() check will not be of any use here. Hence, the null check for subnetMap is recommended here, instead of an isEmpty() check for subnetMapList().",
      "parentUuid": "da2a55be_0f0e6034",
      "range": {
        "startLine": 293,
        "startChar": 20,
        "endLine": 298,
        "endChar": 17
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_653d7dbb",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 298,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-27T11:00:00Z",
      "side": 1,
      "message": "In order to further better this piece of code, could you please make the return value of updateSubnetMapWithFIxedIp() as SubnetMap instead of void, similar to what is present in updateSubnetNodeWithPort() ? This will avoid an extra subnetMap read in line 293, as updateSubnetMapWithFixedPort() will itself return us the subnetMap instance.",
      "range": {
        "startLine": 291,
        "startChar": 20,
        "endLine": 298,
        "endChar": 17
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_a5b5b532",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 298,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-07-27T13:11:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2a55be_0f0e6034",
      "range": {
        "startLine": 293,
        "startChar": 20,
        "endLine": 298,
        "endChar": 17
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_f990fe44",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 311,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-26T16:22:00Z",
      "side": 1,
      "message": "Please retain the original single loop that iterates over fixedIps. Two loops are not required.",
      "range": {
        "startLine": 286,
        "startChar": 16,
        "endLine": 311,
        "endChar": 89
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_af1e3461",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 311,
      "author": {
        "id": 6574
      },
      "writtenOn": "2017-07-26T16:53:24Z",
      "side": 1,
      "message": "this double loop is done , so that the calls are successively kept in the same order as before.\nthat is to say:\n- updateSubnetNodeWithFixedIp x times\n- create VPN Interface x 1\n- addSubnetToVpn x times\n- HandleSubnetsForExternalRoute x 1\n- createElanInterface x 1\n\nas the version is still unstable, do you really want to change the order of calls ?\n\nI would prefer to do the change, after the version is stable.\nunless you tell me that your change will bring stability.\nthanks",
      "parentUuid": "da2a55be_f990fe44",
      "range": {
        "startLine": 286,
        "startChar": 16,
        "endLine": 311,
        "endChar": 89
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_0a012e05",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 311,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-27T11:00:00Z",
      "side": 1,
      "message": "Yeah, if we look at all the scenarios where the fixedIps can be added, updated, this is a fine change. Thanks",
      "parentUuid": "da2a55be_af1e3461",
      "range": {
        "startLine": 286,
        "startChar": 16,
        "endLine": 311,
        "endChar": 89
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_400b0725",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 311,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-07-27T13:11:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2a55be_0a012e05",
      "range": {
        "startLine": 286,
        "startChar": 16,
        "endLine": 311,
        "endChar": 89
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_b94a06c3",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 358,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-26T16:22:00Z",
      "side": 1,
      "message": "Retain single loop over fixedIps as before.",
      "range": {
        "startLine": 332,
        "startChar": 12,
        "endLine": 358,
        "endChar": 13
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_8f19b07b",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 358,
      "author": {
        "id": 6574
      },
      "writtenOn": "2017-07-26T16:53:24Z",
      "side": 1,
      "message": "same remark as before.\ndoes it bring added value on stability ?\nwhile version is unstable, I would rather not to do it.",
      "parentUuid": "da2a55be_b94a06c3",
      "range": {
        "startLine": 332,
        "startChar": 12,
        "endLine": 358,
        "endChar": 13
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_25ec25c7",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 358,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-27T11:00:00Z",
      "side": 1,
      "message": "Lets keep this change for now. Ideally, I would like this to be in line with the handleRouterInterfaceAdded() method, where deleteOfPortInterface and deleteElanInterface() will be called outside the loop, but its not that easy here.",
      "parentUuid": "da2a55be_8f19b07b",
      "range": {
        "startLine": 332,
        "startChar": 12,
        "endLine": 358,
        "endChar": 13
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_ec831a54",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 405,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-26T16:22:00Z",
      "side": 1,
      "message": "check not required",
      "range": {
        "startLine": 405,
        "startChar": 37,
        "endLine": 405,
        "endChar": 70
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_05064186",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 407,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-27T11:00:00Z",
      "side": 1,
      "message": "If a port has two fixedIps from the same subnet, then the subnetMapList will have the same subnetMap twice. Please avoid this for routerInterfaceAdded(), routerInterfaceRemoved(), portCreated(), portRemoved() cases.\nPlease ensure that the list contains unique instances of subnetMap",
      "range": {
        "startLine": 407,
        "startChar": 20,
        "endLine": 407,
        "endChar": 49
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_200ed334",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 407,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-07-27T13:11:32Z",
      "side": 1,
      "message": "\"If a port has two fixedIps from the same subnet\" - we doesn\u0027t support this case in dualstack specification, please see [0]\n\n[0] https://git.opendaylight.org/gerrit/#/c/54089/",
      "parentUuid": "da2a55be_05064186",
      "range": {
        "startLine": 407,
        "startChar": 20,
        "endLine": 407,
        "endChar": 49
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_c03537db",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 18
      },
      "lineNbr": 407,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-27T13:31:53Z",
      "side": 1,
      "message": "got it.Thanks:)",
      "parentUuid": "da2a55be_200ed334",
      "range": {
        "startLine": 407,
        "startChar": 20,
        "endLine": 407,
        "endChar": 49
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_b9a046a0",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 18
      },
      "lineNbr": 698,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-26T16:22:00Z",
      "side": 1,
      "message": "why do we need this check?\nThe subnetMap is retried from the subnetId present in the routerPort in handleRouterInterfaceAdded. Hence these two will always be equal.",
      "range": {
        "startLine": 696,
        "startChar": 16,
        "endLine": 698,
        "endChar": 17
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2a55be_3984560b",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 18
      },
      "lineNbr": 708,
      "author": {
        "id": 5871
      },
      "writtenOn": "2017-07-26T16:22:00Z",
      "side": 1,
      "message": "not needed.",
      "range": {
        "startLine": 708,
        "startChar": 17,
        "endLine": 708,
        "endChar": 34
      },
      "revId": "f69d0e2e03fd0635c4f990175e2d19a4c8c5ebb1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}