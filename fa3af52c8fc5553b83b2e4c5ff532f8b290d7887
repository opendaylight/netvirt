{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_91a541b7",
        "filename": "vpnservice/aclservice/impl/src/test/java/org/opendaylight/netvirt/aclservice/tests/AclServiceTestBase.java",
        "patchSetId": 2
      },
      "lineNbr": 341,
      "author": {
        "id": 5346
      },
      "writtenOn": "2017-02-16T13:31:49Z",
      "side": 1,
      "message": "Shall we retain log statements which logs actual and expected flows? Atleast, I found it useful for debugging purposes.",
      "range": {
        "startLine": 341,
        "startChar": 4,
        "endLine": 341,
        "endChar": 78
      },
      "revId": "fa3af52c8fc5553b83b2e4c5ff532f8b290d7887",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_82c20a32",
        "filename": "vpnservice/aclservice/impl/src/test/java/org/opendaylight/netvirt/aclservice/tests/AclServiceTestBase.java",
        "patchSetId": 2
      },
      "lineNbr": 341,
      "author": {
        "id": 6464
      },
      "writtenOn": "2017-02-17T14:14:04Z",
      "side": 1,
      "message": "+1 for logging.",
      "parentUuid": "fafc7978_91a541b7",
      "range": {
        "startLine": 341,
        "startChar": 4,
        "endLine": 341,
        "endChar": 78
      },
      "revId": "fa3af52c8fc5553b83b2e4c5ff532f8b290d7887",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_b8391df4",
        "filename": "vpnservice/aclservice/impl/src/test/java/org/opendaylight/netvirt/aclservice/tests/AclServiceTestBase.java",
        "patchSetId": 2
      },
      "lineNbr": 341,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-02-27T15:40:03Z",
      "side": 1,
      "message": "you mean you want the LOG.info from org.opendaylight.netvirt.aclservice.tests.AclServiceTestBase.assertFlowsInAnyOrder(Iterable\u003cFlowEntity\u003e) in org.opendaylight.genius.mdsalutil.interfaces.testutils.TestIMdsalApiManager.assertFlowsInAnyOrder(Iterable\u003cFlowEntity\u003e) also?\n\nI\u0027m curious if that is really useful - that String in that INFO log is, typically, going to be HUGE - what do you guys do with it? How do you visualize it, and see problems?  I would have thought that\u0027s completely pointless... there is actually, already, a better alternative for this - have you noticed how, (only) if the assert fails, then org.opendaylight.mdsal.binding.testutils.AssertDataObjects.assertEqualByText(String, Object), which is called by both of the above, prints you a nice proper diff?",
      "parentUuid": "fafc7978_82c20a32",
      "range": {
        "startLine": 341,
        "startChar": 4,
        "endLine": 341,
        "endChar": 78
      },
      "revId": "fa3af52c8fc5553b83b2e4c5ff532f8b290d7887",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_48be5c66",
        "filename": "vpnservice/aclservice/impl/src/test/java/org/opendaylight/netvirt/aclservice/tests/AclServiceTestBase.java",
        "patchSetId": 2
      },
      "lineNbr": 341,
      "author": {
        "id": 5346
      },
      "writtenOn": "2017-02-28T09:32:14Z",
      "side": 1,
      "message": "The current assert output string definitely helps to identify specific mismatches. But it might be hard to debug all the cases with this string.\n\nBelow are the cases, which I can think of where we need all the flows for comparison.\n- If there are multiple mismatches, the current assert output points to only one mismatch/issue at a time.\n- For debugging ordering issues, I found it difficult with the current assert output. Instead I can simply copy expected and actual flows in two separate files, format it and use some compare tool for comparison. \n\nFinally, I don\u0027t see any harm in having log statements (with huge data) for UT\u0027s. Maybe some extra code but helps for debugging.",
      "parentUuid": "fafc7978_b8391df4",
      "range": {
        "startLine": 341,
        "startChar": 4,
        "endLine": 341,
        "endChar": 78
      },
      "revId": "fa3af52c8fc5553b83b2e4c5ff532f8b290d7887",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}