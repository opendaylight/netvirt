{
  "comments": [
    {
      "key": {
        "uuid": "ba1f61a0_fa66f5b9",
        "filename": "vpnservice/aclservice/impl/src/main/java/org/opendaylight/netvirt/aclservice/listeners/AclInterfaceStateListener.java",
        "patchSetId": 11
      },
      "lineNbr": 122,
      "author": {
        "id": 5882
      },
      "writtenOn": "2017-09-07T07:48:36Z",
      "side": 1,
      "message": "This check will break the scenario which Aswin reported earlier ie., scenario where a neutron port is created with SG disabled and was later enabled. This is because, in neutronvpn, InterfaceAcl is augmented only when port security is enabled while neutron port is created. And also, cache from InterfaceState is not updated during port updates in AclInterfaceListener update().",
      "range": {
        "startLine": 122,
        "startChar": 8,
        "endLine": 122,
        "endChar": 32
      },
      "revId": "dbc004d2cda61c807f949ad5c074d8843def8b16",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_7d5b1ff6",
        "filename": "vpnservice/aclservice/impl/src/main/java/org/opendaylight/netvirt/aclservice/listeners/AclInterfaceStateListener.java",
        "patchSetId": 11
      },
      "lineNbr": 122,
      "author": {
        "id": 4269
      },
      "writtenOn": "2017-09-07T11:42:06Z",
      "side": 1,
      "message": "Good catch Shashi, filtering based on the InterfaceAcl augmentation may not work for us. If want to avoid port other than vm ports we may need to check for other option like device owner or a more appropriate if there is any.\n\nBut I am also leaning towards having the isportsecurity enabled check in the right places to avoid binding for interfaces not of acl interest.",
      "parentUuid": "ba1f61a0_fa66f5b9",
      "range": {
        "startLine": 122,
        "startChar": 8,
        "endLine": 122,
        "endChar": 32
      },
      "revId": "dbc004d2cda61c807f949ad5c074d8843def8b16",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_9daed37f",
        "filename": "vpnservice/aclservice/impl/src/main/java/org/opendaylight/netvirt/aclservice/listeners/AclInterfaceStateListener.java",
        "patchSetId": 11
      },
      "lineNbr": 122,
      "author": {
        "id": 5492
      },
      "writtenOn": "2017-09-07T12:30:08Z",
      "side": 1,
      "message": "When SG is later enabled for the port, the interfaceState will already exist for that port when the update() call comes into NeutronPortChangeListener.  \n\nSo can\u0027t we create the ACLInterface in the cache during that lifecycle inside NeutronPortChangeListener?\n\nCreating ACLInterface for non-neutron ports is incorrect and can lead to lot of downstream ACL problems in ODL.",
      "parentUuid": "ba1f61a0_7d5b1ff6",
      "range": {
        "startLine": 122,
        "startChar": 8,
        "endLine": 122,
        "endChar": 32
      },
      "revId": "dbc004d2cda61c807f949ad5c074d8843def8b16",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_1df02390",
        "filename": "vpnservice/aclservice/impl/src/main/java/org/opendaylight/netvirt/aclservice/listeners/AclInterfaceStateListener.java",
        "patchSetId": 11
      },
      "lineNbr": 122,
      "author": {
        "id": 4269
      },
      "writtenOn": "2017-09-07T12:45:35Z",
      "side": 1,
      "message": "Ya right, this is doable, but may be better do it in updateAcl in AbstractAclServiceImpl for neutron update.",
      "parentUuid": "ba1f61a0_9daed37f",
      "range": {
        "startLine": 122,
        "startChar": 8,
        "endLine": 122,
        "endChar": 32
      },
      "revId": "dbc004d2cda61c807f949ad5c074d8843def8b16",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}