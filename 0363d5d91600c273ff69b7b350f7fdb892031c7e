{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_05fd846e",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 773
      },
      "writtenOn": "2017-02-17T21:33:59Z",
      "side": 1,
      "message": "can you use the form: https://git.opendaylight.org/gerrit/#/q/topic:cool-topic",
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_f6ce2a2d",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 2589
      },
      "writtenOn": "2017-02-22T12:11:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fafc7978_05fd846e",
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_1ff52883",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-01-31T16:47:52Z",
      "side": 1,
      "message": "can this feature be re-conciled for the stats fetch functions with the acl service stats functionality?\nhttps://git.opendaylight.org/gerrit/#/c/49086\nit does very similar operations with direct rpc based stats fetch from the switch, on demand",
      "range": {
        "startLine": 35,
        "startChar": 57,
        "endLine": 35,
        "endChar": 58
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_a52dcd48",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 2589
      },
      "writtenOn": "2017-02-07T07:45:17Z",
      "side": 1,
      "message": "Currently, the ACL feature is a very specific one and sits under the ACL service. Our goal is to develop a more generic bundle, that aside from retrieving port/flow counters on request, will also enable to add a new service (used with Genius infrastructure) that enables getting filtered counters sent/received from a specific network element IP. This is described here: https://git.opendaylight.org/gerrit/#/c/50771/.\nMaybe in the future it will be possible to merge the ACL counters logic to this bundle.",
      "parentUuid": "fafc7978_1ff52883",
      "range": {
        "startLine": 35,
        "startChar": 57,
        "endLine": 35,
        "endChar": 58
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_8c7cf8b6",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-02-21T06:43:08Z",
      "side": 1,
      "message": "would be good if the common code re-factoring is done as a part of this feature itself. while acl service cannot directly consume this i guess, since it needs to measure the pkt drops for its own flow rules, whereas netvirt stats could have different classifiers for its stats. but, can stats fetch rpcs on the tables and any other common functions be generalized at a code level?",
      "parentUuid": "fafc7978_a52dcd48",
      "range": {
        "startLine": 35,
        "startChar": 57,
        "endLine": 35,
        "endChar": 58
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_dd8fcc28",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 2589
      },
      "writtenOn": "2017-02-21T12:30:49Z",
      "side": 1,
      "message": "The ACL counter implementation could indeed be another use case for our infrastructure. For example, DHCP rules counters could also be another use case - we are providing a generic infrastructure for all netvirt bundles. Currently, we are only supporting port counters, but our intentions for Carbon is to expend it to also support flow counters (for element to element counters) - and at that point it could be a good idea to merge the acl use case to our infrastructure.",
      "parentUuid": "fafc7978_8c7cf8b6",
      "range": {
        "startLine": 35,
        "startChar": 57,
        "endLine": 35,
        "endChar": 58
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_5f3c74c8",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-02-21T06:43:08Z",
      "side": 1,
      "message": "can these port level stats be retrieved through ovsdb as well? any idea of the pros/cons of using of vs ovsdb counters? please give some implementation detail on how this module will service these new api, will the rpc be a 1 time fetch operation from the switch? will counters be stored in datastore? what happens across switch and controller reboots.",
      "range": {
        "startLine": 37,
        "startChar": 74,
        "endLine": 37,
        "endChar": 75
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_e27b0bf3",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 2589
      },
      "writtenOn": "2017-02-21T10:34:08Z",
      "side": 1,
      "message": "Code is already implemented - https://git.opendaylight.org/gerrit/#/c/50776/.",
      "parentUuid": "fafc7978_5f3c74c8",
      "range": {
        "startLine": 37,
        "startChar": 74,
        "endLine": 37,
        "endChar": 75
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_de033140",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-02-26T09:22:39Z",
      "side": 1,
      "message": "it will be good if the spec can capture the approach (how) as well at a high level, beyond the yang changes and feature description (what).\nhow about my query on pros/cons of using openflow vs ovsdb. has any proto been done to compare the 2?",
      "parentUuid": "fafc7978_e27b0bf3",
      "range": {
        "startLine": 37,
        "startChar": 74,
        "endLine": 37,
        "endChar": 75
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_1b67804e",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 2589
      },
      "writtenOn": "2017-02-28T12:08:34Z",
      "side": 1,
      "message": "I have added description in the Alternatives section regarding getting the statistics from openflow rules.\nI\u0027ve also added a description of the work flow.",
      "parentUuid": "fafc7978_de033140",
      "range": {
        "startLine": 37,
        "startChar": 74,
        "endLine": 37,
        "endChar": 75
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_65ed70b7",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 50,
      "author": {
        "id": 773
      },
      "writtenOn": "2017-02-17T21:33:59Z",
      "side": 1,
      "message": "Is this model the same as described in the e2eCounters spec? It should only be defined in the root spec and then referenced in the child specs.",
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_e2066b85",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 50,
      "author": {
        "id": 2589
      },
      "writtenOn": "2017-02-21T10:29:36Z",
      "side": 1,
      "message": "This model is defined here, I\u0027ve put it in the e2e spec so it would be possible to look at all of the YANG model in the same page. I can remove it from there.\nI\u0027ve mentioned in the e2e spec that it is based on this one.",
      "parentUuid": "fafc7978_65ed70b7",
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_9f9ab812",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 72,
      "author": {
        "id": 4534
      },
      "writtenOn": "2017-01-31T16:47:52Z",
      "side": 1,
      "message": "ericsson team is also submitting some counters related patches to genius for integration with ceilometer. i can find more info on the patch and send out, my suggestion is to find some common ground with these counters as well. i will follow up on this.",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 5
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_e5107503",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 72,
      "author": {
        "id": 2589
      },
      "writtenOn": "2017-02-07T07:45:17Z",
      "side": 1,
      "message": "Please see Shlomi\u0027s answer to Vivek on this topic.",
      "parentUuid": "fafc7978_9f9ab812",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 5
      },
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_c52d3c00",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 184,
      "author": {
        "id": 773
      },
      "writtenOn": "2017-02-17T21:33:59Z",
      "side": 1,
      "message": "nitpicks",
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_8244bfb7",
        "filename": "docs/specs/netvirt-statistics-spec.rst",
        "patchSetId": 14
      },
      "lineNbr": 184,
      "author": {
        "id": 2589
      },
      "writtenOn": "2017-02-21T10:29:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fafc7978_c52d3c00",
      "revId": "0363d5d91600c273ff69b7b350f7fdb892031c7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}