{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_71666b52",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5433
      },
      "writtenOn": "2017-03-08T22:23:44Z",
      "side": 1,
      "message": "What does \u0027stacking up for the follower node\u0027 mean?\nand why patch port is not updated?",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_87ad8a9d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 4030
      },
      "writtenOn": "2017-03-09T12:46:19Z",
      "side": 1,
      "message": "What does \u0027stacking up for the follower node\u0027 mean?\nIn 3 node cluster , when stack up (./stack.sh) on OVS, each node(Master and Followers) will take the requests and try to process it, but processing is done through Master node only.\n\nwhy patch port is not updated?\nPatch port is not updated , due to below statement returns null for follower node during stack up.\n\nBridgeConfigurationManagerImpl.java:   \nNode internalOvsdbNode \u003d southbound.readConfigBridge(ovsdbNode, brInt);\n\nConfig DS will update with bridge information via Master node only,\nIn failure case(Bug-7816), when stack up on OVS, follower node processed first instead Master node. So the above statement will returns null.Due to null  followed statements are not executed and local cache (Map\u003cPair\u003cString, String\u003e, String\u003e patchPortNames) is not update with patchport names.\nWhereas in Success case Master node processed first.",
      "parentUuid": "fafc7978_71666b52",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_d3b11448",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/VLANProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5433
      },
      "writtenOn": "2017-03-10T00:45:40Z",
      "side": 1,
      "message": "Thank you for explaining. My comments are below:\n\n1) block 61-66 is duplicated from BridgeConfigurationManagerImpl. We could move the logic to set the patch port name from BridgeConfigurationManagerImpl to this method.\n\n2) In this method if configurationService.getPatchPortName() returns null we calculate the patch port name and call configurationService.setPatchPortName(). Now we properly cache the patch port name.\n\n3) Is the cache useful? I mean does this method get calls multiple times? If it is only called once then I think we don\u0027t need to maintain the cache. But we still need to do 1) to avoid duplicate codes\n\nWhat do you think?",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_f3eb78a1",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/VLANProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5444
      },
      "writtenOn": "2017-03-10T04:53:31Z",
      "side": 1,
      "message": "1) Agree with Vinh regarding the duplicated code. Please move that logic into a separate method.\n\n2) Also, agree with the suggestion to continue using the cache in order to reduce obsoleting other code. Note that configurationService.getPatchPortName() is called in a number of places. If we remove configurationService.addPatchPortName(), we should also remove getPatchPortName() since this would no longer be meaningful.",
      "parentUuid": "fafc7978_d3b11448",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_70fdb36d",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/VLANProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 4030
      },
      "writtenOn": "2017-03-13T12:33:03Z",
      "side": 1,
      "message": "Thank you for your comment. I\u0027ve addressed the comment.",
      "parentUuid": "fafc7978_d3b11448",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_906ad717",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/VLANProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 4030
      },
      "writtenOn": "2017-03-13T12:33:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fafc7978_f3eb78a1",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_73cca8bb",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/VLANProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 5444
      },
      "writtenOn": "2017-03-10T04:53:31Z",
      "side": 1,
      "message": "suggest avoiding using magic numbers like the \"1\" in brExt_Ex[1]; what is the second element of brExt_Ex supposed to represent?",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_302e8bfb",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/VLANProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 4030
      },
      "writtenOn": "2017-03-13T12:33:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fafc7978_73cca8bb",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_131f1cb8",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/api/ConfigurationService.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5444
      },
      "writtenOn": "2017-03-10T04:53:31Z",
      "side": 1,
      "message": "This method should be cleaned up if we are removing addPatchPortName()",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_b06f1b2a",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/api/ConfigurationService.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 4030
      },
      "writtenOn": "2017-03-13T12:33:03Z",
      "side": 1,
      "message": "It is being called by some other places and classes.",
      "parentUuid": "fafc7978_131f1cb8",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_7b1f535c",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/api/ConfigurationService.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5433
      },
      "writtenOn": "2017-03-13T21:10:37Z",
      "side": 1,
      "message": "Since you remove \u0027addPatchPorName() the patch port cache is no longer maintained. As such this method always returns null. We need to see if the changes affect the caller(s) of this method.\n\nIn my opinion we keep the cache. We set the patch port value if call to getPatchPortName (etheir from VlanProvider or BridgeConfigurationImpl) returns null.\nThoughts?",
      "parentUuid": "fafc7978_b06f1b2a",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_412b7c33",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/api/ConfigurationService.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5444
      },
      "writtenOn": "2017-03-13T21:52:28Z",
      "side": 1,
      "message": "Agree with Vinh. In the constructor of ConfigurationServiceImpl(), we put a bunch of entries into the cache - one could argue that we should use the addPatchPortName() method there so that it is easier to see where getPatchPortName() relates.\n\nA lot of the calls to getPatchPortName() still use brInt and brEx as arguments...so those calls may now return null all the time if we are not updating the cache via addPatchPortName().",
      "parentUuid": "fafc7978_7b1f535c",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_6ec4935f",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/api/ConfigurationService.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 4030
      },
      "writtenOn": "2017-03-17T12:55:30Z",
      "side": 1,
      "message": "\u0027getPatchPortName()\u0027 does not return null but returns default value which was defined in the constructor of ConfigurationServiceImpl.java.",
      "parentUuid": "fafc7978_412b7c33",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_8ec73764",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/api/ConfigurationService.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 4030
      },
      "writtenOn": "2017-03-17T12:55:30Z",
      "side": 1,
      "message": "\u0027addPatchPorName()\u0027 is not used/referenced anywhere in code and hence removed. \u0027getPatchPortName()\u0027 does not return null but returns default value which was defined in the constructor of ConfigurationServiceImpl.java.",
      "parentUuid": "fafc7978_7b1f535c",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_b72feef5",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/api/ConfigurationService.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5433
      },
      "writtenOn": "2017-03-17T22:06:16Z",
      "side": 1,
      "message": "I am a little confused. Now we have two ways to get the patch port names:\n1) getting from the existing cache \u003c-- this always uses the default.\n2) getting from your new logic that uses constants and on-the-fly calculation.\n\nWhich one is correct? I prefer using a single logic (cache usage), it is easy to understand and maintain the code",
      "parentUuid": "fafc7978_8ec73764",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_9f2475c7",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/api/ConfigurationService.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 4030
      },
      "writtenOn": "2017-03-21T12:58:24Z",
      "side": 1,
      "message": "In custom.properties, will enable either of the below flags to create bridges\nFlag-1: ovsdb.l3.fwd.enabled\u003dyes\nFlag-2: ovsdb.l3.multiple.network.enabled\u003dyes\n\nif we use \u0027Flag-1\u0027 , by default br-int and br-ex bridges will be created and while executing the code getPatchPortName() will return default patch port value and use the same value.\ngetPatchPortName() will be used/called only when \u0027flag-1\u0027 is enabled. And when \u0027flag-1\u0027 is enabled, expected value from getPatchPortName() is default value.\n\nIf we use \u0027Flag-2\u0027 , by default br-int bridge will only be created and user need to add external bridge(ex: br-ex, br-ext, br-external etc..) and In my opinion, cache is not needed as patch port name can be constructed based on external bridge name which is read from ConfigurationServiceImpl.java",
      "parentUuid": "fafc7978_b72feef5",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_d0c70a63",
        "filename": "openstack/net-virt/src/main/java/org/opendaylight/netvirt/openstack/netvirt/api/ConfigurationService.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5433
      },
      "writtenOn": "2017-03-21T19:54:39Z",
      "side": 1,
      "message": "Hi Hari,\n\nThank you for explaining. I am no longer confused. My preference is still using the cache. The advantage is there is only place where getPatchPortName logic is implemented for both scenarios. This way the code is clean and easy to maintain.\n\nNow you add another method readPatchPortName. One will always question what the differences between the read and getPatchPortName? and why there are two methods? Of course we can always explain why we did that. But code should be clear and doesn\u0027t need explanations. \n\nIt seems that you don\u0027t like the cache solution, might I suggest a simple modification from your solution:\n\n1) Don\u0027t add the method readPatchPortName to the ConfigurationService. This method has nothing with Configuration, adding there will cause confusion with the existing getPatchPortName\n\n2) Instead add this method as a static method of VlanProvider with the name getPatchPortName. The name starts with \u0027read\u0027 suggests that it is read from somewhere which is not correct.\nNow both BridgeConfigurationManagerImpl and VlanProvider can use it",
      "parentUuid": "fafc7978_9f2475c7",
      "revId": "a26dae8841370d62528f08025a72b83972b52329",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}