{
  "comments": [
    {
      "key": {
        "uuid": "ba1f61a0_c8957d41",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 56
      },
      "lineNbr": 1226,
      "author": {
        "id": 6154
      },
      "writtenOn": "2017-08-17T09:58:20Z",
      "side": 1,
      "message": "There is a fundamental issue here :\n\nWhen a router (say Router-1)with one subnet is created (say IPv4 subnet) , createL3InternalVpn() -\u003e associateRouterToInternalVpn() -\u003e addSubnetToVpn() is called . Say IPv4 subnet has one port (say Port-1) . For this VpnInterface is created in this method with IPv4 address adjacency. When second subnet (say IPv6 subnet) is added to the same router Router-1 , handleRouterInterfaceAdded() -\u003e addSubnetToVpn() is called . In addSubnetToVpn() , for the same port Port-1 , createVpnInterface() is being called where for the same interface IPv6 adjacency is added and syncWrite is called. Due to this behavior might be unpredictable in VpnInterfaceManager.\n\nBest design approach is , if port has IPs from 2 subnets , in current scenario it must check whether already there is VpnInterface. If yes , just add the new adjacency. \n\nTo maintain the backward compatibility , if port has only one IP , the current code should work as-is.",
      "revId": "6eb2559b07a3883b74c184e8a0ccf6bb00b32d0c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_57480487",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 56
      },
      "lineNbr": 1226,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-08-18T07:46:59Z",
      "side": 1,
      "message": "We are not agree here, because in Neutron OpenStack, when we add a subnet A (IPv4) from network B in router C, this creates a separate neutron-port with only IPv4 address. If then we will add subnet D (IPv6) from the same network B in the same router C \u003d\u003e this will also creates a separate neutron port with only IPv6 address. So for dualstack network B, in this case, we will have 2 neutron-ports and we suppose, that this is logical to create a new VPN interface for each neutron-port.\n\nWhen we create new neutron port in dualstack network B with \"neutron port-create B\", in OpenStack this creates one neutron port with 2 IP addresses, and in ODL we will call handleNeutronPortCreated(), which will create only one VPN interface. This VPN interface will handle 2 IP addresses as well.\n\nSo, would you confirm, please, that we should create only one VPN interface (with different adjacencies) for all subnetworks N, which are in the same neutron network and which are added as a ports in a router R (internal VPN) ?",
      "parentUuid": "ba1f61a0_c8957d41",
      "revId": "6eb2559b07a3883b74c184e8a0ccf6bb00b32d0c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_098822e6",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 56
      },
      "lineNbr": 1226,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-08-22T14:32:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba1f61a0_57480487",
      "revId": "6eb2559b07a3883b74c184e8a0ccf6bb00b32d0c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_6839f140",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 56
      },
      "lineNbr": 1605,
      "author": {
        "id": 6154
      },
      "writtenOn": "2017-08-17T09:58:20Z",
      "side": 1,
      "message": "There is a fundamental issue here :\n\nSay router (say Router-1) is having two subnets (IPv4 and IPv6). Remove one of the subnet (say IPv6). Then handleRouterInterfaceRemoved () -\u003e removeSubnetFromVpn() -\u003e deleteVpnInterface() is called. This will go and delete the vpn-interfaces. This is a major BUG.\n\nThe design should be , if port has IPv4 and IPv6 addresses (i.e two subnets) , then VpnInterface needs to be updated. The adjacency corresponding to subnet being removed needs to be deleted from VpnInterface and update must be done. \n\nTo maintain backward compatibility , if port has only stack(IPv4 or IPv6) , when subnet is removed from router Router-1 , VpnInterface must be deleted.",
      "revId": "6eb2559b07a3883b74c184e8a0ccf6bb00b32d0c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_696efe30",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronvpnManager.java",
        "patchSetId": 56
      },
      "lineNbr": 1605,
      "author": {
        "id": 7194
      },
      "writtenOn": "2017-08-22T14:32:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba1f61a0_6839f140",
      "revId": "6eb2559b07a3883b74c184e8a0ccf6bb00b32d0c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}