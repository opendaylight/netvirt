<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2015 Ericsson India Global Services Pvt Ltd. and others.  All rights reserved.

This program and the accompanying materials are made available under the
terms of the Eclipse Public License v1.0 which accompanies this distribution,
and is available at http://www.eclipse.org/legal/epl-v10.html INTERNAL
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.opendaylight.odlparent</groupId>
        <artifactId>karaf4-parent</artifactId>
        <version>3.0.2</version>
        <relativePath/>
    </parent>

    <groupId>org.opendaylight.netvirt</groupId>
    <artifactId>karaf</artifactId>
    <version>0.7.0-SNAPSHOT</version>
    <name>ODL :: netvirt :: ${project.artifactId}</name>
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <!-- <karaf.localFeature>odl-netvirt-openstack</karaf.localFeature> -->
    </properties>

    <dependencies>
        <dependency>
            <!-- scope is compile so all features (there is only one) are installed
            into startup.properties and the feature repo itself is not installed -->
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>framework</artifactId>
            <version>${karaf.version}</version>
            <type>kar</type>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>netvirt-features</artifactId>
            <version>${project.version}</version>
            <classifier>features</classifier>
            <type>xml</type>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <!-- This is here just so that we have the respective bundles for this development debug feature
                 in netvirt's Karaf distribution, and it is easy to do "feature:install odl-mdsal-trace" on
                 test environments to find memory leaks due to non-closed transactions.  This feature is NOT
                 intended for production, and not installed as a boot feature by default.  (If we do not do
                 this, then it's quite a pain/complicated to install this feature onto a non-dev environment
                 on a test server where an ODL binary was installed e.g. from an RPM package, because as is
                 we currently cannot easily, by a simple CLI command, add additional features from new remote
                 repos.)
             -->
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>features-mdsal-trace</artifactId>
            <version>1.8.0-SNAPSHOT</version>
            <classifier>features</classifier>
            <type>xml</type>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <!-- This ensures we have odl-jolokia in the distribution -->
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>features-extras</artifactId>
            <version>1.11.0-SNAPSHOT</version>
            <type>xml</type>
            <classifier>features</classifier>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <!-- This ensures aaa-cli is available for the copy below -->
            <groupId>org.opendaylight.aaa</groupId>
            <artifactId>aaa-cli-jar</artifactId>
            <version>0.8.0-SNAPSHOT</version>
            <!-- Use scope test (and not more!) just so we have the dependency for the maven-dependency-plugin below -->
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-aaa-cli-jar</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.opendaylight.aaa</groupId>
                                    <artifactId>aaa-cli-jar</artifactId>
                                    <version>0.8.0-SNAPSHOT</version>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/assembly/bin</outputDirectory>
                            <includeArtifactIds>aaa-cli-jar</includeArtifactIds>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <excludeTransitive>true</excludeTransitive>
                            <!-- Do not include version in JAR filename, as external scripts call this utility,
                                 and they understandly do not want to have to adjust for every ODL release;
                                 see e.g. https://github.com/dfarrell07/puppet-opendaylight/pull/140 -->
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Temporarily deploy the karaf artifact -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                </configuration>
            </plugin>
            <!-- NETVIRT-1126: Heavy-handed workaround to remove mysql dependencies from system -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <delete includeemptydirs="true">
                                    <fileset dir="${project.build.directory}/assembly/system/mysql"/>
                                </delete>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
