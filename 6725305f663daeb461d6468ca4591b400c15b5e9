{
  "comments": [
    {
      "key": {
        "uuid": "1a494da4_f692349e",
        "filename": "netvirt/renderers/neutron/src/main/java/org/opendaylight/netvirt/netvirt/renderers/neutron/MdsalHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 2029
      },
      "writtenOn": "2016-04-15T15:27:49Z",
      "side": 1,
      "message": "This file was deleted after splitting the code to Listener and Processor classes.",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_e96c1c39",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-04-14T16:02:07Z",
      "side": 1,
      "message": "Would it make sense to use a builder here instead of mocking the class? Sometimes it\u0027s too painful but it might be worth trying...",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_6d52d714",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 2029
      },
      "writtenOn": "2016-04-14T18:06:47Z",
      "side": 1,
      "message": "I did consider this. From looking at several other examples of UT code, I saw a lot of mocking, and just went that route.\n\nIt\u0027s not yet quite clear to me what advantage it would be to use the Neutron Port Builder vs. mocking the Neutron Port. Can you enlighten me? Thanks..",
      "parentUuid": "1a494da4_e96c1c39",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_2d1d6fbe",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 773
      },
      "writtenOn": "2016-04-15T00:45:04Z",
      "side": 1,
      "message": "I kind of like the idea of the builder. In many of the IT tests we have builder classes to set everything up. Maybe we could leverage the builders across both IT and UT?\n\nStephen, we have a NeutronUtils class which does some stuff like below to create neutron northbound model structures. Would that make sense to beef those up and then use them here for the builders?",
      "parentUuid": "1a494da4_6d52d714",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_73047615",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-04-15T09:55:03Z",
      "side": 1,
      "message": "I tend to think of tests as one way to check how sensible the APIs are, which involves using the APIs directly as far as possible. Mocking is there to allow tests to be written when an instance of an object is needed but is to hard to create, or doesn\u0027t do what we want it to do (typically, some layer below that\u0027s complex to set up â€” say for instance you wanted to test some code which accesses a database, without having to set up the database).\n\nSo the approach I tend to take is to write code without mocking as far as possible, and use mocks when necessary. In this case I would start by writing with a builder, and only if that\u0027s too complicated, or if I wanted to use Mockito\u0027s verification stuff, switch to a mock (or a spy perhaps). If using a builder is too complicated, that\u0027s possibly an indication that the builder is too hard to use, and the fix then would be to improve the builder, not use a mock.",
      "parentUuid": "1a494da4_6d52d714",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_331aee6e",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-04-15T09:55:03Z",
      "side": 1,
      "message": "Let\u0027s use the builders here, and if it makes sense to share code move it to a utility class...",
      "parentUuid": "1a494da4_2d1d6fbe",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_d6f3b808",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 2029
      },
      "writtenOn": "2016-04-15T15:27:49Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "1a494da4_331aee6e",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_76ee2424",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 2029
      },
      "writtenOn": "2016-04-15T15:27:49Z",
      "side": 1,
      "message": "I\u0027ve converted this to use the neutron PortBuilder.\n\nI looked at NeutronUtils class. I didn\u0027t find any usage references, maybe this is no longer used?\n\nOne observation, NeutronUtils is using neutron SPI to create NeutronPort objects. From a side chat with Stephen, it seems \npreferable to use API (PortBuilder()) vs. SPI.",
      "parentUuid": "1a494da4_2d1d6fbe",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_8988f8e8",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-04-14T16:02:07Z",
      "side": 1,
      "message": "If we\u0027re just throwing the exception, we might as well remove the try/catch construct.",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_0d3a33cd",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 2029
      },
      "writtenOn": "2016-04-14T18:06:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a494da4_8988f8e8",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_49cc3036",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-04-14T16:02:07Z",
      "side": 1,
      "message": "As above.",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_ed36e7e6",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 2029
      },
      "writtenOn": "2016-04-14T18:06:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a494da4_49cc3036",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_a9d174cf",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-04-14T16:02:07Z",
      "side": 1,
      "message": "As above. In fact I\u0027d pull the \"read a port from MD-SAL\" code out into a helper function.",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_4d343bde",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 2029
      },
      "writtenOn": "2016-04-14T18:06:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a494da4_a9d174cf",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_09e2289f",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-04-14T16:02:07Z",
      "side": 1,
      "message": "I\u0027d typical structure this differently. Basically I like to see @Test methods which can be read as-is, telling a little story...\n\n    @Test\n    public void testRemove() {\n        // Given ...\n        // (this is where I set things up, so the broker, and adding the port)\n\n        // When ...\n        // (remove the port)\n\n        // Then\n        // assert that the port is removed\n\nIn particular, the assertions are in the main test method, which allows tests to be composed using private supporting methods as you\u0027ve done, but understood without going into the details of the supporting methods. Here I can\u0027t figure out what the test is verifying without going into the details of the supporting methods.\n\nAnother thing I like to see in tests is a certain level of trust: don\u0027t bother re-testing things. So testAdd() verifies that ports are added correctly; testUpdate() and testRemove() need to add a port, but their job isn\u0027t to verify that adding a port works, so they don\u0027t need to assert anything related to that â€” all they assert is that, respectively, the port data has been updated, and the port has been removed.",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_2d31efec",
        "filename": "netvirt/renderers/neutron/src/test/java/org/opendaylight/netvirt/netvirt/renderers/neutron/NeutronPortDataProcessorTest.java",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 2029
      },
      "writtenOn": "2016-04-14T18:06:47Z",
      "side": 1,
      "message": "Good feedback. Let me incorporate some of this into the code, will push an updated patch.",
      "parentUuid": "1a494da4_09e2289f",
      "revId": "6725305f663daeb461d6468ca4591b400c15b5e9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}