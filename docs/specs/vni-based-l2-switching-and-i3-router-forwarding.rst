===============================================
VNI based L2 switching and L3 router forwarding
===============================================

https://git.opendaylight.org/gerrit/#/q/topic:vni-based-l2-l3

**Important: All gerrit links raised for this feature will have topic name as "vni-based-l2-l3"**

This feature realizes VNI (Virtual Network Identifier) based L2 switching and L3 router forwarding
using openstack VNIs in datapath. In doing so, it eliminates the usage of ``LPortTags``,
``ELAN tags`` and ``MPLS labels`` for intra-DC L3 forwarding via routers. Instead, it makes use of
VNIs supplied by Openstack to achieve the same.
It is a step towards using VNIs in datapath holistically for all routing usecases.

**Note**: The existing L3 BGPVPN control-path and data-path semantics will be retained to continue
 using ``MPLS Labels`` and ``LPort tags`` to realize both intra-dc and inter-dc connectivity.


Problem description
===================

MPLS Label based datapath semantics should be used when configured so by the tenant. Today, even
for VXLAN enabled networks by the tenant, the labels are generated by L3 forwarding service and
used. Such labels are re-used for inter-DC use-cases with BGPVPN as well. This does not honour and
is not in accordance with the datapath semantics from an orchestration point of view.

This implementation will completely remove the reliance on using:

#. Labels for L3 forwarding
#. LPort tags for L2 switching

within the DC. Instead, it will re-use the VNIs provided by Openstack (which are unique for every
network segment in the cloud).

More specifically, the traffic from source VM will be routed in source OVS by the L3VPN/ELAN
pipeline. After that, the packet will travel as a switched packet in the VXLAN underlay within the
DC, containing the VNI in the VxLAN header instead of MPLS label / LPort Tag. In the destination
OVS, the packet will be collected and sent to the destination VM through the existing ELAN
pipeline.

Use Cases
---------
This feature involves amendments/testing pertaining to the following (for intra DC L3 forwarding):

**L3 use cases**:

#. Router realization for subnet added as router-interface holding a pre-created VM.
#. Router realization for subnet added as router-interface when a new VM is booted on the subnet.
#. Router updated with an extra route to an existing VM.
#. Router updated to remove previously added one/more extra routes.
#. Retain SNAT functionality for external VLAN Provider Networks (transparent Internet VPN)
#. Retain SNAT functionality for external Flat Networks (transparent Internet VPN)
#. Retain SNAT functionality for tenant-orchestrated Internet VPN of type GRE (actually MPLSOverGRE)
#. Retain DNAT functionality for external VLAN Provider Networks (transparent Internet VPN)
#. Retain DNAT functionality for external Flat Networks (transparent Internet VPN)
#. Retain DNAT functionality for tenant-orchestrated Internet VPN of type GRE (actually MPLSOverGRE)


**ELAN use cases**:

#. Unicast packet transmission within the hypervisor
#. Unicast packet transmission across hypervisors
#. Broadcast packet transmission within the hypervisor (local broadcast)
#. Broadcast packet transmission across hypervisors (remote broadcast)


Proposed change
===============

The following components within OpenDaylight Controller needs to be enhanced:

* VPN Engine (VPN Manager and VPN Interface Manager)
* FIB Manager
* NAT Service
* ELAN Manager


Pipeline changes
----------------

Local DPN (VMs on the same DPN)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: none

 CLASSIFIER_TABLE => DISPATCHER_TABLE => INGRESS_ACL_TABLE => DISPATCHER_TABLE
 => L3_GW_MAC_TABLE => L3_FIB_TABLE => Nexthop Group (Set destination MAC
 address and LPortTag into NXMREG6) => EGRESS_DISPATCHER_TABLE =>
 EGRESS_ACL_TABLE => Output to destination VM port


Remote DPN (VMs on two different DPNs)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
* **VM sourcing the traffic (Ingress DPN)**:

.. code-block:: none

 CLASSIFIER_TABLE => DISPATCHER_TABLE => INGRESS_ACL_TABLE => DISPATCHER_TABLE
 => L3_GW_MAC_TABLE => L3_FIB_TABLE (set destination MAC, set tunnel-ID as
 destination L2 VNI) => Output to tunnel port

**Note**: The flow rule in L3_FIB_TABLE will continue to set the destination mac-address, so that
 the packet will go out to the tunnel port as a switched packet.

 * In case of VLAN / flat provider networks, it will be taken over the ELAN Pipeline
   once it enters into the destination OVS.
 * In case of VxLAN provider networks, it will hit the ``INTERNAL_TUNNEL_TABLE`` on the destination
   OVS, from where ELAN will take this packet directly to the VM, bypassing the ELAN pipeline.


* **VM receiving the traffic (Egress DPN)**:

.. code-block:: none

 CLASSIFIER_TABLE => DISPATCHER_TABLE => L3_VNI_TUN_DEMUX_TABLE =>
 DISPATCHER_TABLE => L2_VNI_TUN_DEMUX_TABLE (Match on L2 VNI, set ELAN tag)
 => L2_DMAC_FILTER_TABLE (Match on destination MAC) => EGRESS_DISPATCHER_TABLE
 => EGRESS_ACL_TABLE => Output to destination VM port


YANG changes
------------
None.


Configuration impact
--------------------
This change doesn't add or modify any configuration parameters.


Clustering considerations
-------------------------
No specific additional clustering considerations to be adhered to.


Other Infra considerations
--------------------------
None.


Security considerations
-----------------------
None.


Scale and Performance Impact
----------------------------
None.


Targeted Release(s)
-------------------
Carbon.

Known Limitations
-----------------
None.


Alternatives
------------
N.A.


Usage
=====

Features to Install
-------------------
odl-netvirt-openstack

REST API
--------
No new changes to the existing REST APIs.

CLI
---
No new CLI is being added.


Implementation
==============

Assignee(s)
-----------
Primary assignee:
  <Abhinav Gupta>
  <Vivekanandan Narasimhan>

Other contributors:
  <Kiran N Upadhyaya>
  <Hanamantagoud V Kandagal>


Work Items
----------

Trello card: https://trello.com/c/PfARbEmU/84-l3-forwarding-for-routers-using-lporttags

#. Code changes to alter the pipeline and e2e testing of the use-cases mentioned.
#. Add Documentation


Dependencies
============
This doesn't add any new dependencies.


Testing
=======

Unit Tests
----------
Appropriate UTs will be added for the new code coming in once framework is in place.

Integration Tests
-----------------
There won't be any Integration tests provided for this feature.

CSIT
----
No new testcases to be added, existing ones should continue to succeed.

Documentation Impact
====================
This will require changes to the Developer Guide.

Developer Guide needs to capture how this feature modifies the existing Netvirt L3 forwarding
service implementation.


References
==========

* https://wiki.opendaylight.org/view/Genius:Carbon_Release_Plan
