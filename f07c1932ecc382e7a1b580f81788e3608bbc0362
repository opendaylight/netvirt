{
  "comments": [
    {
      "key": {
        "uuid": "83f77a5d_9a691ee0",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/ConntrackBasedSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-05-11T13:38:07Z",
      "side": 1,
      "message": "We are checking if \"(routerId \u003d\u003d NatConstants.INVALID_ID)\" only in these api, but its also used in the subsequent APIs below. Any specific reason why its only validated in these apis alone?",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 80
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b3b9a30_36f680dd",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/ConntrackBasedSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-05-14T07:02:40Z",
      "side": 1,
      "message": "Just coz this is where we\u0027ve hit it so far, though we should handle in all cases. Ideally, syncFlow should throw back IAE and calling code should catch it correctly, but that would be too big a change for the scope of this fix.",
      "parentUuid": "83f77a5d_9a691ee0",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 80
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37fcb0f8_afb2daf7",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/ConntrackBasedSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-05-14T07:37:09Z",
      "side": 1,
      "message": "In that case, can we add a check in Line 70 and remove it from the apis below? IMHO, this is still not the right way because if we are returning, there should be an event that invokes the api again once the routerId is available.",
      "parentUuid": "3b3b9a30_36f680dd",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 80
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34911bca_48d09008",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/ConntrackBasedSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-05-15T05:45:06Z",
      "side": 1,
      "message": "That is being handled through the change in port listener. It is better to retry at the root than at 10 other places it cascades the event to. This is just extra logging/check, if we still see this it means we\u0027re missing another code path that can lead us here.\n\nagree, better to move the check to line70, wanted to make sure it was correct way to do it. Should we similarly check for elanId too?",
      "parentUuid": "37fcb0f8_afb2daf7",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 80
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce704abc_95b9526f",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/ConntrackBasedSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-05-15T06:30:05Z",
      "side": 1,
      "message": "Yeah please check for (routerId \u003d\u003d null) at L70 and you can remove it from the two apis.\n\nW.r.t ELAN I don\u0027t think we have seen an issue where networkInfo/ElanInfo is missing. So, we can ignore it for now.",
      "parentUuid": "34911bca_48d09008",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 80
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb11efe7_7a349c03",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/ConntrackBasedSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-05-14T07:37:09Z",
      "side": 1,
      "message": "Looks like its a CP error. The debug message should be updated.",
      "range": {
        "startLine": 111,
        "startChar": 57,
        "endLine": 111,
        "endChar": 92
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5976cc5b_039c83b7",
        "filename": "natservice/impl/src/main/java/org/opendaylight/netvirt/natservice/internal/ConntrackBasedSnatService.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-05-15T05:45:06Z",
      "side": 1,
      "message": "will do.",
      "parentUuid": "bb11efe7_7a349c03",
      "range": {
        "startLine": 111,
        "startChar": 57,
        "endLine": 111,
        "endChar": 92
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bedf7269_29a142dc",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-05-11T13:38:07Z",
      "side": 1,
      "message": "Does invoking the setExternalGwMac() API ultimately trigger handleSnatAllSwitch/handleSnat()?",
      "range": {
        "startLine": 447,
        "startChar": 20,
        "endLine": 447,
        "endChar": 60
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cff3006b_22bf0d68",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-05-11T13:55:31Z",
      "side": 1,
      "message": "Basically, we are registering a transient listener to update the ext-routers model with the ext_gw_mac_address when router is created, but we are going ahead and creating the neutron port in the DB (Line 163: API handleNeutronPortCreated). Will this have any other side-effect?",
      "parentUuid": "bedf7269_29a142dc",
      "range": {
        "startLine": 447,
        "startChar": 20,
        "endLine": 447,
        "endChar": 60
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "304f466c_d20bfe37",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-05-14T07:02:40Z",
      "side": 1,
      "message": "Think so, setExternalGwMac is the one that populates the routerId that is used all over SNAT code.",
      "parentUuid": "bedf7269_29a142dc",
      "range": {
        "startLine": 447,
        "startChar": 20,
        "endLine": 447,
        "endChar": 60
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2ecaca8_ab0330cc",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-05-14T07:02:40Z",
      "side": 1,
      "message": "That is the million dollar question here (: Should we do this or make a read-with-retry.",
      "parentUuid": "cff3006b_22bf0d68",
      "range": {
        "startLine": 447,
        "startChar": 20,
        "endLine": 447,
        "endChar": 60
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "731a9414_56a99f83",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-05-14T07:37:09Z",
      "side": 1,
      "message": "My main concern is that this issue is seen during scale (i.e., only reproduced when there is an out-of-band events) and we are trying to address it. So I want to ensure that the fix indeed addresses the problem. \n\nWe can surely try this fix again in the scale lab, but as a developer testing we can try the following.\n1. In eventCallbacks.onAddOrUpdate(), add some small delay for few seconds to see how the code is reacting.\n2. Shall we apply the same logic in add() event and delay neutronPortCreation until the router is populated in the DB. So that the possibilities of side effects are minimized?\n\nWhat are your thoughts?",
      "parentUuid": "a2ecaca8_ab0330cc",
      "range": {
        "startLine": 447,
        "startChar": 20,
        "endLine": 447,
        "endChar": 60
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b54ca0c_24be202f",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-05-14T07:37:09Z",
      "side": 1,
      "message": "So if we are handling this properly here, we should no longer see the exception in ConntrackBasedSnatService right?",
      "parentUuid": "304f466c_d20bfe37",
      "range": {
        "startLine": 447,
        "startChar": 20,
        "endLine": 447,
        "endChar": 60
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bbaf329_6ef27d01",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-05-15T05:45:06Z",
      "side": 1,
      "message": "I been thinking about how to test this. One thing we can do is manually create in wrong order through rest API, don\u0027t even need openstack for it. Will be easy enough to even add test case in CSIT this way. Agree?",
      "parentUuid": "731a9414_56a99f83",
      "range": {
        "startLine": 447,
        "startChar": 20,
        "endLine": 447,
        "endChar": 60
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "765f39ba_137b71d1",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-05-15T05:45:06Z",
      "side": 1,
      "message": "Yes, that is the expectation. The log over there, if shows up, means we missing a code path.",
      "parentUuid": "3b54ca0c_24be202f",
      "range": {
        "startLine": 447,
        "startChar": 20,
        "endLine": 447,
        "endChar": 60
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c986c57c_e0c84eae",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-05-15T06:30:05Z",
      "side": 1,
      "message": "Sure, that is one way of validating the change. \n\nW.r.t the actual fix, shall we consider this - \"Shall we apply the same logic in add() event and delay neutronPortCreation until the router is populated in the DB. So that the possibilities of side effects are minimized?\"",
      "parentUuid": "9bbaf329_6ef27d01",
      "range": {
        "startLine": 447,
        "startChar": 20,
        "endLine": 447,
        "endChar": 60
      },
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a264dce2_15b013db",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 448,
      "author": {
        "id": 4269
      },
      "writtenOn": "2018-05-11T11:19:29Z",
      "side": 1,
      "message": "what does this call back do? the idea is to invoke snatServiceManagerImpl.notify(...) again once the router id is in place?",
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efff3e5d_f6fe670a",
        "filename": "neutronvpn/impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 3
      },
      "lineNbr": 448,
      "author": {
        "id": 4269
      },
      "writtenOn": "2018-05-11T11:34:13Z",
      "side": 1,
      "message": "Ok I think I got it, this logic delaying router g/w set until the router id is available? This should work for us",
      "parentUuid": "a264dce2_15b013db",
      "revId": "f07c1932ecc382e7a1b580f81788e3608bbc0362",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}