{
  "comments": [
    {
      "key": {
        "uuid": "3afa9182_cd47971c",
        "filename": "vpnservice/elanmanager/elanmanager-impl/src/main/java/org/opendaylight/netvirt/elan/internal/ElanInstanceManager.java",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-06-02T14:34:11Z",
      "side": 1,
      "message": "Do we really want to ignore deprecation warnings here?",
      "revId": "edd4c99fbfa225de460d2dc1bc16ed4c7092efd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_256d8f33",
        "filename": "vpnservice/elanmanager/elanmanager-impl/src/main/java/org/opendaylight/netvirt/elan/internal/ElanInstanceManager.java",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-06-05T04:11:31Z",
      "side": 1,
      "message": "This is just to avoid too many multiple marker lines for this class (in Eclipse IDE) because deprecated job coordinator, AsyncDataTreeChangeListenerBase usage.",
      "parentUuid": "3afa9182_cd47971c",
      "revId": "edd4c99fbfa225de460d2dc1bc16ed4c7092efd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_2f2c48ab",
        "filename": "vpnservice/elanmanager/elanmanager-impl/src/main/java/org/opendaylight/netvirt/elan/internal/ElanInstanceManager.java",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-06-06T08:13:01Z",
      "side": 1,
      "message": "Those marker lines signal work that needs to be done sooner or later. I’d rather we didn’t suppress them.",
      "parentUuid": "3afa9182_256d8f33",
      "revId": "edd4c99fbfa225de460d2dc1bc16ed4c7092efd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_6d5e63eb",
        "filename": "vpnservice/elanmanager/elanmanager-impl/src/main/java/org/opendaylight/netvirt/elan/utils/ElanUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 2251,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-06-02T14:35:08Z",
      "side": 1,
      "message": "It would be useful to annotate this as a result:\n\n    @Nonnull public static Set\u003cString\u003e ...",
      "revId": "edd4c99fbfa225de460d2dc1bc16ed4c7092efd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_056a131a",
        "filename": "vpnservice/elanmanager/elanmanager-impl/src/main/java/org/opendaylight/netvirt/elan/utils/ElanUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 2251,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-06-05T04:11:31Z",
      "side": 1,
      "message": "ElanUtils static methods is used only by elanmanager-impl module and not meant to exposed as an API to outside world. So, Do you think @Nonnull is required here ?",
      "parentUuid": "3afa9182_6d5e63eb",
      "revId": "edd4c99fbfa225de460d2dc1bc16ed4c7092efd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_0f0cec41",
        "filename": "vpnservice/elanmanager/elanmanager-impl/src/main/java/org/opendaylight/netvirt/elan/utils/ElanUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 2251,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-06-06T08:13:01Z",
      "side": 1,
      "message": "@Nonnull is useful for static null analysis even on non-API methods.",
      "parentUuid": "3afa9182_056a131a",
      "revId": "edd4c99fbfa225de460d2dc1bc16ed4c7092efd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_8d462f22",
        "filename": "vpnservice/elanmanager/elanmanager-impl/src/main/java/org/opendaylight/netvirt/elan/utils/ElanUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 2252,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-06-02T14:34:11Z",
      "side": 1,
      "message": "Urgh, again with the Optional as flow control...\n\n    Set\u003cString\u003e removed \u003d elanInstanceToInterfacesCache.remove(elanInstanceName);\n    return removed !\u003d null ? removed : Collections.emptySet();",
      "revId": "edd4c99fbfa225de460d2dc1bc16ed4c7092efd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_65779703",
        "filename": "vpnservice/elanmanager/elanmanager-impl/src/main/java/org/opendaylight/netvirt/elan/utils/ElanUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 2252,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-06-05T04:11:31Z",
      "side": 1,
      "message": "I fear we might loose declarative style of coding if we avoid using Optional\u0027s methods. Can you send me the link which talks about JIT compiler and GC optimization issues because of this usage ? I couldn\u0027t find such one.",
      "parentUuid": "3afa9182_8d462f22",
      "revId": "edd4c99fbfa225de460d2dc1bc16ed4c7092efd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_6a2bde82",
        "filename": "vpnservice/elanmanager/elanmanager-impl/src/main/java/org/opendaylight/netvirt/elan/utils/ElanUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 2252,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-06-06T08:13:01Z",
      "side": 1,
      "message": "I don’t have one that’s exactly on point to hand, but https://www.jfokus.se/jfokus17/preso/Java-SE-8-best-practices.pdf is always useful. We’re not losing anything by avoiding Optional methods here, we’re not writing declarative code either (this isn’t Prolog). The fact that Optional exists now isn’t a reason to start using it everywhere! I realise you and I will probably stay at loggerheads over this, I’m not sure it’s worth spending all that much time arguing over. Perhaps the fact that you’re the only person writing this kind of code should give you pause... But I will continue filing patches to remove such uses if necessary.",
      "parentUuid": "3afa9182_65779703",
      "revId": "edd4c99fbfa225de460d2dc1bc16ed4c7092efd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}