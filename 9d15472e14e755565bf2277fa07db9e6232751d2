{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_99a66252",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/PipelineOrchestratorImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T06:40:29Z",
      "side": 1,
      "message": "Do we require a change in InboundNatService for the packets to be forwarded to this table, also a change in L2_REWRITE?",
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_9447474b",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/PipelineOrchestratorImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 4030
      },
      "writtenOn": "2016-10-20T07:39:03Z",
      "side": 1,
      "message": "yes we changed inboundNATservice to forward the packets to table 31 instead of table 40.\nif new table required for ingress learned flow we may need to change L2_REWRITE also.",
      "parentUuid": "7a6b29fe_99a66252",
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_3e6c519c",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/PipelineOrchestratorImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T10:02:38Z",
      "side": 1,
      "message": "It is not about the default pipeline rule but the rules generated when we create fip. I am not sure about the code flow in determining the table no in NAT, if it is already verified it should be fine. I thought of it since we are now not having a offset of 10 between tables.",
      "parentUuid": "7a6b29fe_9447474b",
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_3e76113f",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/PipelineOrchestratorImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 4030
      },
      "writtenOn": "2016-10-20T10:37:38Z",
      "side": 1,
      "message": "we have verified floating Ip scenario and its working as expected.",
      "parentUuid": "7a6b29fe_3e6c519c",
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_79af062c",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/EgressAclService.java",
        "patchSetId": 4
      },
      "lineNbr": 939,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T06:40:29Z",
      "side": 1,
      "message": "This rule need not be added for stateful implementation?",
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_7471cb76",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/EgressAclService.java",
        "patchSetId": 4
      },
      "lineNbr": 939,
      "author": {
        "id": 4030
      },
      "writtenOn": "2016-10-20T07:39:03Z",
      "side": 1,
      "message": "For stateful implementation, goto flow will be added\n (return addPipelineInstruction(flowBuilder,instructionBuilder, false);) instead of learned flows. \n\nIf stateful implementation is disabled then learned flows will be added.",
      "parentUuid": "7a6b29fe_79af062c",
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_7e0529c1",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/EgressAclService.java",
        "patchSetId": 4
      },
      "lineNbr": 939,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T10:02:38Z",
      "side": 1,
      "message": "Ok. This should be fine.",
      "parentUuid": "7a6b29fe_7471cb76",
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_f962f614",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclLearnServiceUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T06:40:29Z",
      "side": 1,
      "message": "This should be table 89?",
      "range": {
        "startLine": 93,
        "startChar": 54,
        "endLine": 93,
        "endChar": 56
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_9954a222",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclLearnServiceUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T06:49:48Z",
      "side": 1,
      "message": "Sorry this should be 39 and in the Egress it should be 89 as the learned rule from IngressTable should go to Egress and viceversa.",
      "parentUuid": "7a6b29fe_f962f614",
      "range": {
        "startLine": 93,
        "startChar": 54,
        "endLine": 93,
        "endChar": 56
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_f4367bb3",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclLearnServiceUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 4030
      },
      "writtenOn": "2016-10-20T07:39:03Z",
      "side": 1,
      "message": "like new netvirt dispatcher table is not forwarding packets to specific service ingress/egress.\nin legacy netvirt pipeline all the packets goes through ingress as well as egress so we thought of having common table for learned flows before the packet reaches ACL service.\nwe tested the behaviour using CSIT cases everything is fine.\nif we follow separate tables for ingress and egress learned flows \nall the packets will be resubmit 2 times.\nfirst packets will hit table 31 resubmit(table 39,40) then the same packet will reach table 81 resubmit(table 89,90).\nis there any specific reasons to have separate tables for learned flows?",
      "parentUuid": "7a6b29fe_f962f614",
      "range": {
        "startLine": 93,
        "startChar": 54,
        "endLine": 93,
        "endChar": 56
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_54d92f82",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclLearnServiceUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 4030
      },
      "writtenOn": "2016-10-20T07:39:03Z",
      "side": 1,
      "message": "like new netvirt dispatcher table is not forwarding packets to specific service ingress/egress.\nin legacy netvirt pipeline all the packets goes through ingress as well as egress so we thought of having common table for learned flows before the packet reaches ACL service.\nwe tested the behaviour using CSIT cases everything is fine.\nif we follow separate tables for ingress and egress learned flows \nall the packets will be resubmit 2 times.\nfirst packets will hit table 31 resubmit(table 39,40) then the same packet will reach table 81 resubmit(table 89,90).\nis there any specific reasons to have separate tables for learned flows?",
      "parentUuid": "7a6b29fe_9954a222",
      "range": {
        "startLine": 93,
        "startChar": 54,
        "endLine": 93,
        "endChar": 56
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_9e5be5f5",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclLearnServiceUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T10:02:38Z",
      "side": 1,
      "message": "I guess it can create issues.\n\nOne such scenario is with the packet coming from on different n/w(L3 scenario) will have dst mac address of the router and not the vm. So table 39 will not have any successful matches. The router mac address will be repalced with vm mac only after table 70. So having the ingress learned rule in table 89 solve this.",
      "parentUuid": "7a6b29fe_f4367bb3",
      "range": {
        "startLine": 93,
        "startChar": 54,
        "endLine": 93,
        "endChar": 56
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_3e9f3161",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclLearnServiceUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 4030
      },
      "writtenOn": "2016-10-20T10:37:38Z",
      "side": 1,
      "message": "Here we are checking with ipmatch instead of mac address and we have tested L3 scenario. Please find the below link\nhttps://logs.opendaylight.org/sandbox/jenkins091/netvirt-csit-1node-openstack-mitaka-openstack-boron/10/archives/log.html.gz",
      "parentUuid": "7a6b29fe_9e5be5f5",
      "range": {
        "startLine": 93,
        "startChar": 54,
        "endLine": 93,
        "endChar": 56
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_7ec7e912",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclLearnServiceUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T11:43:55Z",
      "side": 1,
      "message": "Ok, I think it is not safe to match on IP as there can be overlapping ip address. But I think it is fine for this patch.\n\nBut I still guess like this there can be other issues with having common table. Since I ideally we need to reset the regex and check it again for ingress after egress.\n\nVm1 Vm2 in same compute\n1)Vm1 Egress ping  allowed Vm2 ingress ping not allowed. no rules the other way.\n2)Vm1 Egress ping adds a rule ping allowed from Vm1 ip  to Vm2 ip allowed in table 39.\n3) The first packet will get dropped in table 90.\n4)Now if we vm2 ping vm1 it will be allowed due to the learned rule thought traffic is not allowed. This issue cannot be addressed completely but can be to an extent by having two tables.\n\n\nI think it is ok to take it up in different patch if this is working for basic use cases.",
      "parentUuid": "7a6b29fe_3e9f3161",
      "range": {
        "startLine": 93,
        "startChar": 54,
        "endLine": 93,
        "endChar": 56
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_619e28ba",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclLearnServiceUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 4030
      },
      "writtenOn": "2016-10-20T12:05:10Z",
      "side": 1,
      "message": "Okay.. if any issue, we will change to IP to mac match later.",
      "parentUuid": "7a6b29fe_7ec7e912",
      "range": {
        "startLine": 93,
        "startChar": 54,
        "endLine": 93,
        "endChar": 56
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_3e20d1f6",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclService.java",
        "patchSetId": 4
      },
      "lineNbr": 691,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T11:43:55Z",
      "side": 1,
      "message": "Is there a generic way to identify ICMP return type and code? \nIt is better not having it?",
      "range": {
        "startLine": 691,
        "startChar": 105,
        "endLine": 691,
        "endChar": 106
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_8174249d",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/IngressAclService.java",
        "patchSetId": 4
      },
      "lineNbr": 691,
      "author": {
        "id": 4030
      },
      "writtenOn": "2016-10-20T12:05:10Z",
      "side": 1,
      "message": "As of now we support only  icmp code(0) and types (8, 13, 15 and 17). If any other icmp type or code supported, we will add some generic way to handle code and types.",
      "parentUuid": "7a6b29fe_3e20d1f6",
      "range": {
        "startLine": 691,
        "startChar": 105,
        "endLine": 691,
        "endChar": 106
      },
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_d9673a24",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/ResubmitAclLearnService.java",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 4269
      },
      "writtenOn": "2016-10-20T06:40:29Z",
      "side": 1,
      "message": "Similar rule required for 89 and 90",
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_94baa708",
        "filename": "openstack/net-virt-providers/src/main/java/org/opendaylight/netvirt/openstack/netvirt/providers/openflow13/services/ResubmitAclLearnService.java",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 4030
      },
      "writtenOn": "2016-10-20T07:39:03Z",
      "side": 1,
      "message": "like new netvirt dispatcher table is not forwarding packets to specific service ingress/egress.\nin legacy netvirt pipeline all the packets goes through ingress as well as egress so we thought of having common table for learned flows before the packet reaches ACL service.\nwe tested the behaviour using CSIT cases everything is fine.\nif we follow separate tables for ingress and egress learned flows \nall the packets will be resubmit 2 times.\nfirst packets will hit table 31 resubmit(table 39,40) then the same packet will reach table 81 resubmit(table 89,90).\nis there any specific reasons to have separate tables for learned flows?",
      "parentUuid": "7a6b29fe_d9673a24",
      "revId": "9d15472e14e755565bf2277fa07db9e6232751d2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}