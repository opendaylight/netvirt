{
  "comments": [
    {
      "key": {
        "uuid": "9a561d44_c04ad426",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronFloatingToFixedIpMappingChangeListener.java",
        "patchSetId": 20
      },
      "lineNbr": 289,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-06-27T13:37:20Z",
      "side": 1,
      "message": "What happens if the lock isn\u0027t acquired?",
      "revId": "2ca80e1aba48561cc58ef814ca94e8bdc543c584",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_f1c0882c",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronFloatingToFixedIpMappingChangeListener.java",
        "patchSetId": 20
      },
      "lineNbr": 289,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-06-28T07:15:54Z",
      "side": 1,
      "message": "I understand why the lock is useful, but this code doesn\u0027t handle the case where isLockAcquired ends up being false. Either we care about the result, in which case we should handle it, or we don\u0027t, in which case we should ignore it entirely (and perhaps use the version of getLock() with no timeout).\n\nWith the code as it is, if things go badly wrong and we don\u0027t get a lock, we\u0027ll delete the node anyway, which is rather surprising (and liable to cause difficulty debugging errors).",
      "parentUuid": "9a561d44_71e2b804",
      "revId": "2ca80e1aba48561cc58ef814ca94e8bdc543c584",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_0055ecc5",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronFloatingToFixedIpMappingChangeListener.java",
        "patchSetId": 20
      },
      "lineNbr": 308,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-06-27T13:37:20Z",
      "side": 1,
      "message": "Same question as above...",
      "revId": "2ca80e1aba48561cc58ef814ca94e8bdc543c584",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_fa6185d4",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 20
      },
      "lineNbr": 402,
      "author": {
        "id": 3511
      },
      "writtenOn": "2016-06-27T06:57:29Z",
      "side": 1,
      "message": "what this function should do? i would expect to update all properties of the port.\nin case the parent have changed you might need to remove the parent interface",
      "revId": "2ca80e1aba48561cc58ef814ca94e8bdc543c584",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_1a79d993",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronPortChangeListener.java",
        "patchSetId": 20
      },
      "lineNbr": 407,
      "author": {
        "id": 3511
      },
      "writtenOn": "2016-06-27T06:57:29Z",
      "side": 1,
      "message": "are you assuming that the vif interface already exist when updating the interface?\nif not you should re-create it",
      "revId": "2ca80e1aba48561cc58ef814ca94e8bdc543c584",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}