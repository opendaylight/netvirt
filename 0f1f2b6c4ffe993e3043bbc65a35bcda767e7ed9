{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_c9261c16",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronTrunkChangeListener.java",
        "patchSetId": 9
      },
      "lineNbr": 70,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-02-10T07:17:31Z",
      "side": 1,
      "message": "You could do it like below: to avoid null check and having parallelism for each sub port.\nOptional.ofNullable(input.getSubPorts()).ifPresent( subPorts -\u003e subPorts.parallelStream().forEach(subPort -\u003e createSubPortInterface(input, subPort)));",
      "revId": "0f1f2b6c4ffe993e3043bbc65a35bcda767e7ed9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_092144fb",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronTrunkChangeListener.java",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-02-10T07:17:31Z",
      "side": 1,
      "message": "Don\u0027t you need to guard against null for getSubPorts() like in the add method ? You can still use Optional.ofNullable to retrieve subports and fill added and deleted list if present.",
      "revId": "0f1f2b6c4ffe993e3043bbc65a35bcda767e7ed9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_e91b20c8",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronTrunkChangeListener.java",
        "patchSetId": 9
      },
      "lineNbr": 90,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-02-10T07:17:31Z",
      "side": 1,
      "message": "same comments as above. you could use stream.forEach here.",
      "revId": "0f1f2b6c4ffe993e3043bbc65a35bcda767e7ed9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_297d28e8",
        "filename": "vpnservice/neutronvpn/neutronvpn-impl/src/main/java/org/opendaylight/netvirt/neutronvpn/NeutronTrunkChangeListener.java",
        "patchSetId": 9
      },
      "lineNbr": 128,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-02-10T07:17:31Z",
      "side": 1,
      "message": "There is already a method createElanInterface in NeutronPortChangeLister for Port. so this can factored out to common method like createElanInterface(String elanName, String interfaceName, WriteTransaction txn) and invoke it after retrieving elanInstanceName from Port (or) SubPorts.",
      "revId": "0f1f2b6c4ffe993e3043bbc65a35bcda767e7ed9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}